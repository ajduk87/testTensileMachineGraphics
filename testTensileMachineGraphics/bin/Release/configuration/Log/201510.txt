
Aplikacija iskljucena        (12-Oct-15 6:40:37 PM)
Aplikacija ukljucena        (12-Oct-15 6:43:20 PM)
Aplikacija iskljucena        (12-Oct-15 6:44:53 PM)
Aplikacija ukljucena        (12-Oct-15 6:45:58 PM)
Aplikacija iskljucena        (12-Oct-15 6:46:02 PM)
Aplikacija ukljucena        (12-Oct-15 6:46:06 PM)
Aplikacija iskljucena        (12-Oct-15 6:50:30 PM)
Aplikacija ukljucena        (12-Oct-15 6:50:34 PM)
Aplikacija iskljucena        (12-Oct-15 6:51:53 PM)
Aplikacija ukljucena        (12-Oct-15 6:52:53 PM)
Aplikacija iskljucena        (12-Oct-15 6:54:41 PM)
Aplikacija ukljucena        (12-Oct-15 6:54:45 PM)
Aplikacija ukljucena        (12-Oct-15 7:02:56 PM)
Aplikacija iskljucena        (12-Oct-15 7:03:22 PM)
Aplikacija ukljucena        (12-Oct-15 7:05:10 PM)
Aplikacija iskljucena        (12-Oct-15 7:05:55 PM)
Aplikacija ukljucena        (12-Oct-15 7:14:50 PM)
Aplikacija iskljucena        (12-Oct-15 7:17:08 PM)
Aplikacija ukljucena        (12-Oct-15 7:37:28 PM)
Aplikacija iskljucena        (12-Oct-15 7:41:12 PM)
Aplikacija ukljucena        (12-Oct-15 7:46:07 PM)
Aplikacija iskljucena        (12-Oct-15 7:51:25 PM)
Aplikacija ukljucena        (13.10.2015 7:23:27)
Aplikacija iskljucena        (13.10.2015 7:23:58)
Aplikacija ukljucena        (13.10.2015 7:24:38)
Aplikacija ukljucena        (13.10.2015 7:27:45)
Aplikacija ukljucena        (13.10.2015 7:29:25)
Aplikacija ukljucena        (13.10.2015 7:30:53)
Aplikacija ukljucena        (13.10.2015 7:32:02)
Aplikacija iskljucena        (13.10.2015 7:32:51)
Aplikacija ukljucena        (13.10.2015 7:32:55)
Aplikacija iskljucena        (13.10.2015 7:33:25)
Aplikacija ukljucena        (13.10.2015 7:33:48)
Aplikacija iskljucena        (13.10.2015 7:34:44)
Aplikacija ukljucena        (13.10.2015 7:35:53)
Aplikacija ukljucena        (13.10.2015 7:38:10)
Aplikacija ukljucena        (13.10.2015 7:40:12)
Aplikacija iskljucena        (13.10.2015 7:41:28)
Aplikacija ukljucena        (13.10.2015 7:42:09)
Aplikacija iskljucena        (13.10.2015 7:42:52)
Aplikacija ukljucena        (13.10.2015 7:43:18)
Aplikacija iskljucena        (13.10.2015 7:43:41)
Aplikacija ukljucena        (13.10.2015 7:44:15)
Aplikacija iskljucena        (13.10.2015 7:44:48)
Aplikacija ukljucena        (13.10.2015 7:45:31)
Aplikacija ukljucena        (13.10.2015 7:47:37)
Aplikacija iskljucena        (13.10.2015 7:48:17)
Aplikacija ukljucena        (13.10.2015 7:49:13)
Aplikacija iskljucena        (13.10.2015 7:49:42)
Aplikacija ukljucena        (13.10.2015 7:50:08)
Aplikacija iskljucena        (13.10.2015 7:50:50)
Aplikacija ukljucena        (13.10.2015 7:53:25)
Aplikacija ukljucena        (13.10.2015 7:54:07)
Aplikacija ukljucena        (13.10.2015 7:55:42)
Aplikacija ukljucena        (13.10.2015 7:57:39)
Aplikacija iskljucena        (13.10.2015 7:58:10)
Aplikacija ukljucena        (13.10.2015 7:58:50)
Aplikacija iskljucena        (13.10.2015 7:59:05)
Aplikacija ukljucena        (13.10.2015 7:59:26)
Aplikacija iskljucena        (13.10.2015 8:00:03)
Aplikacija ukljucena        (13.10.2015 8:01:16)
Aplikacija iskljucena        (13.10.2015 8:01:40)
Aplikacija ukljucena        (13.10.2015 8:04:00)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:04:30)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:04:30)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:04:31)
Aplikacija iskljucena        (13.10.2015 8:04:37)
Aplikacija ukljucena        (13.10.2015 8:04:41)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:04:44)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:04:54)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:05:02)
Aplikacija iskljucena        (13.10.2015 8:05:28)
Aplikacija ukljucena        (13.10.2015 8:05:32)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:05:36)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:06:05)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:06:06)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:06:07)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:06:07)
Aplikacija iskljucena        (13.10.2015 8:06:17)
Aplikacija ukljucena        (13.10.2015 8:07:20)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:07:23)
Aplikacija ukljucena        (13.10.2015 8:08:02)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:08:06)
Aplikacija iskljucena        (13.10.2015 8:08:35)
Aplikacija ukljucena        (13.10.2015 8:11:46)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:11:50)
Aplikacija iskljucena        (13.10.2015 8:12:11)
Aplikacija ukljucena        (13.10.2015 8:13:16)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:13:20)
Aplikacija ukljucena        (13.10.2015 8:15:52)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:15:56)
Aplikacija iskljucena        (13.10.2015 8:16:15)
Aplikacija ukljucena        (13.10.2015 8:16:20)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:16:24)
Aplikacija iskljucena        (13.10.2015 8:16:59)
Aplikacija ukljucena        (13.10.2015 8:17:52)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:17:55)
Aplikacija iskljucena        (13.10.2015 8:18:13)
Aplikacija ukljucena        (13.10.2015 8:18:20)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:18:24)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:18:46)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:18:47)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:18:47)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:18:48)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:19:51)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:19:52)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:19:52)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:19:53)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:20:21)
Aplikacija iskljucena        (13.10.2015 8:20:39)
Aplikacija ukljucena        (13.10.2015 8:20:43)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:20:48)
Aplikacija ukljucena        (13.10.2015 8:22:00)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:22:04)
Aplikacija iskljucena        (13.10.2015 8:22:29)
Aplikacija ukljucena        (13.10.2015 8:23:07)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:23:11)
Aplikacija iskljucena        (13.10.2015 8:24:04)
Aplikacija ukljucena        (13.10.2015 8:24:08)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:24:12)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:24:36)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:24:37)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:24:37)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:24:38)
Aplikacija ukljucena        (13.10.2015 8:26:44)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:26:48)
Aplikacija ukljucena        (13.10.2015 8:28:19)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:28:22)
Aplikacija ukljucena        (13.10.2015 8:29:11)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:29:15)
Aplikacija ukljucena        (13.10.2015 8:30:18)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:30:22)
Aplikacija ukljucena        (13.10.2015 8:30:47)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:30:51)
Aplikacija iskljucena        (13.10.2015 8:31:01)
Aplikacija ukljucena        (13.10.2015 8:31:43)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:31:47)
Aplikacija ukljucena        (13.10.2015 8:33:44)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:33:48)
Aplikacija ukljucena        (13.10.2015 8:38:41)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:38:46)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:39:07)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13.10.2015 8:39:09)
Aplikacija iskljucena        (13.10.2015 8:39:20)
Aplikacija ukljucena        (13.10.2015 8:39:25)
Aplikacija iskljucena        (13.10.2015 8:39:46)
Aplikacija ukljucena        (13.10.2015 8:39:51)
Aplikacija iskljucena        (13.10.2015 8:40:10)
Aplikacija ukljucena        (13.10.2015 8:40:14)
Aplikacija ukljucena        (13.10.2015 8:45:57)
Aplikacija iskljucena        (13.10.2015 8:48:08)
Aplikacija ukljucena        (13.10.2015 8:55:58)
Aplikacija ukljucena        (13-Oct-15 5:10:05 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 5:10:10 PM)
Aplikacija iskljucena        (13-Oct-15 5:10:20 PM)
Aplikacija ukljucena        (13-Oct-15 5:13:53 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 5:13:56 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 5:15:02 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 5:15:02 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 5:15:03 PM)
Aplikacija iskljucena        (13-Oct-15 5:15:21 PM)
Aplikacija ukljucena        (13-Oct-15 5:15:25 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 5:15:28 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 5:16:44 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 5:16:45 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 5:16:45 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 5:16:46 PM)
Aplikacija ukljucena        (13-Oct-15 5:21:33 PM)
Aplikacija ukljucena        (13-Oct-15 5:22:18 PM)
Aplikacija ukljucena        (13-Oct-15 5:23:11 PM)
Aplikacija iskljucena        (13-Oct-15 5:23:16 PM)
Aplikacija ukljucena        (13-Oct-15 5:23:19 PM)
Aplikacija ukljucena        (13-Oct-15 5:28:10 PM)
Aplikacija iskljucena        (13-Oct-15 5:28:19 PM)
Aplikacija ukljucena        (13-Oct-15 5:28:22 PM)
Aplikacija ukljucena        (13-Oct-15 5:29:26 PM)
Aplikacija ukljucena        (13-Oct-15 5:32:39 PM)
Aplikacija ukljucena        (13-Oct-15 5:33:12 PM)
Aplikacija ukljucena        (13-Oct-15 5:33:47 PM)
Aplikacija ukljucena        (13-Oct-15 5:39:55 PM)
Aplikacija iskljucena        (13-Oct-15 5:40:42 PM)
Aplikacija ukljucena        (13-Oct-15 5:49:02 PM)
Aplikacija iskljucena        (13-Oct-15 5:49:11 PM)
Aplikacija ukljucena        (13-Oct-15 5:49:15 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 5:50:57 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 5:51:27 PM)
Aplikacija iskljucena        (13-Oct-15 5:53:05 PM)
Aplikacija ukljucena        (13-Oct-15 5:54:20 PM)
Aplikacija ukljucena        (13-Oct-15 5:55:36 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 5:57:24 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 5:57:24 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 5:57:25 PM)
Aplikacija iskljucena        (13-Oct-15 5:58:17 PM)
Aplikacija ukljucena        (13-Oct-15 6:03:26 PM)
Aplikacija ukljucena        (13-Oct-15 6:06:40 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:06:55 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:07:04 PM)
Aplikacija iskljucena        (13-Oct-15 6:08:13 PM)
Aplikacija ukljucena        (13-Oct-15 6:08:23 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:08:31 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:08:42 PM)
Aplikacija iskljucena        (13-Oct-15 6:09:22 PM)
Aplikacija ukljucena        (13-Oct-15 6:10:23 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:10:26 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:10:32 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:10:41 PM)
Aplikacija iskljucena        (13-Oct-15 6:11:37 PM)
Aplikacija ukljucena        (13-Oct-15 6:14:47 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:15:42 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:16:10 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:17:06 PM)
Aplikacija ukljucena        (13-Oct-15 6:18:21 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:18:29 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:18:52 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:19:46 PM)
Aplikacija ukljucena        (13-Oct-15 6:21:00 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:21:09 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:21:28 PM)
Aplikacija ukljucena        (13-Oct-15 6:22:40 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:22:43 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:22:54 PM)
Aplikacija ukljucena        (13-Oct-15 6:24:57 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:25:05 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:25:15 PM)
Aplikacija iskljucena        (13-Oct-15 6:25:51 PM)
Aplikacija ukljucena        (13-Oct-15 6:26:39 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:26:47 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:26:54 PM)
Aplikacija ukljucena        (13-Oct-15 6:28:24 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:28:32 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:28:41 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:29:31 PM)
Aplikacija iskljucena        (13-Oct-15 6:29:59 PM)
Aplikacija ukljucena        (13-Oct-15 6:35:39 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:36:01 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:36:11 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:36:41 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:37:48 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:38:12 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (13-Oct-15 6:38:40 PM)
Aplikacija iskljucena        (13-Oct-15 6:40:46 PM)
Aplikacija ukljucena        (13-Oct-15 6:45:26 PM)
Aplikacija iskljucena        (13-Oct-15 6:45:30 PM)
Aplikacija ukljucena        (13-Oct-15 6:46:32 PM)
Aplikacija iskljucena        (13-Oct-15 7:17:43 PM)
Aplikacija ukljucena        (13-Oct-15 7:22:21 PM)
Aplikacija iskljucena        (13-Oct-15 7:24:56 PM)
Aplikacija ukljucena        (13-Oct-15 7:31:08 PM)
Aplikacija ukljucena        (13-Oct-15 7:32:16 PM)
Aplikacija iskljucena        (13-Oct-15 7:32:32 PM)
Aplikacija ukljucena        (13-Oct-15 7:32:44 PM)
Aplikacija ukljucena        (13-Oct-15 7:33:40 PM)
Aplikacija iskljucena        (13-Oct-15 7:33:56 PM)
Aplikacija ukljucena        (13-Oct-15 7:34:59 PM)
Aplikacija iskljucena        (13-Oct-15 7:36:06 PM)
Aplikacija ukljucena        (13-Oct-15 7:37:16 PM)
Aplikacija iskljucena        (13-Oct-15 7:38:07 PM)
Aplikacija ukljucena        (13-Oct-15 7:47:21 PM)
Aplikacija iskljucena        (13-Oct-15 7:48:13 PM)
Aplikacija ukljucena        (13-Oct-15 7:52:52 PM)
Aplikacija iskljucena        (13-Oct-15 7:53:06 PM)
Aplikacija ukljucena        (13-Oct-15 8:02:43 PM)
Aplikacija iskljucena        (13-Oct-15 8:14:33 PM)
Aplikacija ukljucena        (10/14/2015 7:44:03 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (10/14/2015 7:44:08 PM)
Aplikacija iskljucena        (10/14/2015 7:44:47 PM)
Aplikacija ukljucena        (10/14/2015 7:48:19 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (10/14/2015 7:48:23 PM)
Aplikacija iskljucena        (10/14/2015 7:48:48 PM)
Aplikacija ukljucena        (10/14/2015 7:50:23 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (10/14/2015 7:50:26 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (10/14/2015 7:52:11 PM)
Aplikacija iskljucena        (10/14/2015 7:55:18 PM)
Aplikacija ukljucena        (10/14/2015 8:04:20 PM)
Aplikacija ukljucena        (10/14/2015 8:21:13 PM)
Aplikacija iskljucena        (10/14/2015 8:23:03 PM)
Aplikacija ukljucena        (10/14/2015 8:34:25 PM)
Aplikacija iskljucena        (10/14/2015 8:35:27 PM)
Aplikacija ukljucena        (10/14/2015 8:42:37 PM)
Aplikacija iskljucena        (10/14/2015 8:42:48 PM)
Aplikacija ukljucena        (10/14/2015 8:43:30 PM)
Aplikacija iskljucena        (10/14/2015 8:44:28 PM)
Aplikacija ukljucena        (10/14/2015 9:02:59 PM)
Aplikacija iskljucena        (10/14/2015 9:10:44 PM)
Aplikacija ukljucena        (10/14/2015 9:10:57 PM)
Aplikacija iskljucena        (10/14/2015 9:11:21 PM)
Aplikacija ukljucena        (10/14/2015 9:11:51 PM)
Aplikacija iskljucena        (10/14/2015 9:13:19 PM)
Aplikacija ukljucena        (10/14/2015 9:22:36 PM)
Aplikacija iskljucena        (10/14/2015 9:23:01 PM)
Aplikacija ukljucena        (10/14/2015 9:24:01 PM)
Aplikacija iskljucena        (10/14/2015 9:26:12 PM)
Aplikacija ukljucena        (10/14/2015 9:27:30 PM)
Aplikacija iskljucena        (10/14/2015 9:30:54 PM)
Aplikacija ukljucena        (15.10.2015 8:03:00)
Aplikacija iskljucena        (15.10.2015 8:03:17)
Aplikacija ukljucena        (15.10.2015 8:04:01)
Aplikacija iskljucena        (15.10.2015 8:24:15)
Aplikacija ukljucena        (10/15/2015 5:04:30 PM)
Aplikacija iskljucena        (10/15/2015 5:08:24 PM)
Aplikacija ukljucena        (10/15/2015 5:18:24 PM)
Aplikacija ukljucena        (10/15/2015 8:01:13 PM)
Aplikacija ukljucena        (10/15/2015 8:05:53 PM)
Aplikacija iskljucena        (10/15/2015 8:05:58 PM)
Aplikacija ukljucena        (10/15/2015 8:07:01 PM)
Aplikacija iskljucena        (10/15/2015 8:07:09 PM)
Aplikacija ukljucena        (10/15/2015 8:07:55 PM)
Aplikacija iskljucena        (10/15/2015 8:11:04 PM)
Aplikacija ukljucena        (10/15/2015 8:15:54 PM)
Aplikacija iskljucena        (10/15/2015 8:19:00 PM)
Aplikacija ukljucena        (17-Oct-15 10:20:54 AM)
Aplikacija iskljucena        (17-Oct-15 10:21:07 AM)
Aplikacija ukljucena        (17-Oct-15 10:21:51 AM)
Aplikacija iskljucena        (17-Oct-15 10:22:03 AM)
Aplikacija ukljucena        (17-Oct-15 10:22:15 AM)
Aplikacija ukljucena        (17-Oct-15 10:23:19 AM)
Aplikacija iskljucena        (17-Oct-15 10:28:32 AM)
Aplikacija ukljucena        (17-Oct-15 10:31:44 AM)
Aplikacija ukljucena        (17-Oct-15 10:35:20 AM)
Aplikacija ukljucena        (17-Oct-15 10:38:48 AM)
Aplikacija ukljucena        (17-Oct-15 10:43:12 AM)
Aplikacija iskljucena        (17-Oct-15 10:46:05 AM)
Aplikacija ukljucena        (17-Oct-15 10:47:01 AM)
Aplikacija iskljucena        (17-Oct-15 10:47:13 AM)
Aplikacija ukljucena        (17-Oct-15 10:47:31 AM)
Aplikacija ukljucena        (17-Oct-15 10:50:05 AM)
Aplikacija iskljucena        (17-Oct-15 10:52:36 AM)
Aplikacija ukljucena        (17-Oct-15 10:54:06 AM)
Aplikacija ukljucena        (17-Oct-15 10:57:15 AM)
Aplikacija iskljucena        (17-Oct-15 10:59:32 AM)
Aplikacija ukljucena        (17-Oct-15 11:02:57 AM)
Aplikacija iskljucena        (17-Oct-15 11:03:11 AM)
Aplikacija ukljucena        (17-Oct-15 11:03:41 AM)
Aplikacija iskljucena        (17-Oct-15 11:04:10 AM)
Aplikacija ukljucena        (17-Oct-15 11:08:41 AM)
Aplikacija iskljucena        (17-Oct-15 11:09:00 AM)
Aplikacija ukljucena        (17-Oct-15 11:09:18 AM)
Aplikacija iskljucena        (17-Oct-15 11:09:28 AM)
Aplikacija ukljucena        (17-Oct-15 11:09:38 AM)
Aplikacija iskljucena        (17-Oct-15 11:09:47 AM)
Aplikacija ukljucena        (17-Oct-15 11:09:58 AM)
Aplikacija iskljucena        (17-Oct-15 11:10:05 AM)
Aplikacija ukljucena        (17-Oct-15 11:10:13 AM)
Aplikacija iskljucena        (17-Oct-15 11:10:22 AM)
Aplikacija ukljucena        (17-Oct-15 11:10:34 AM)
Aplikacija iskljucena        (17-Oct-15 11:10:46 AM)
Aplikacija ukljucena        (17-Oct-15 11:10:56 AM)
Aplikacija iskljucena        (17-Oct-15 11:11:06 AM)
Aplikacija ukljucena        (17-Oct-15 11:11:14 AM)
Aplikacija iskljucena        (17-Oct-15 11:11:33 AM)
Aplikacija ukljucena        (17-Oct-15 11:11:43 AM)
Aplikacija iskljucena        (17-Oct-15 11:11:58 AM)
Aplikacija ukljucena        (17-Oct-15 11:12:09 AM)
Aplikacija iskljucena        (17-Oct-15 11:13:07 AM)
Aplikacija ukljucena        (17-Oct-15 11:17:11 AM)
Aplikacija iskljucena        (17-Oct-15 11:18:02 AM)
Aplikacija ukljucena        (17-Oct-15 11:19:24 AM)
Aplikacija iskljucena        (17-Oct-15 11:19:38 AM)
Aplikacija ukljucena        (17-Oct-15 11:20:15 AM)
Aplikacija iskljucena        (17-Oct-15 11:20:28 AM)
Aplikacija ukljucena        (17-Oct-15 11:20:33 AM)
Aplikacija iskljucena        (17-Oct-15 11:20:40 AM)
Aplikacija ukljucena        (17-Oct-15 11:21:04 AM)
Aplikacija iskljucena        (17-Oct-15 11:21:23 AM)
Aplikacija ukljucena        (17-Oct-15 11:22:51 AM)
Aplikacija iskljucena        (17-Oct-15 11:23:25 AM)
Aplikacija ukljucena        (17-Oct-15 11:24:07 AM)
Aplikacija iskljucena        (17-Oct-15 11:27:08 AM)
Aplikacija ukljucena        (17-Oct-15 11:30:46 AM)
Aplikacija iskljucena        (17-Oct-15 11:32:40 AM)
Aplikacija ukljucena        (17-Oct-15 11:35:31 AM)
Aplikacija iskljucena        (17-Oct-15 11:37:24 AM)
Aplikacija ukljucena        (17-Oct-15 11:49:28 AM)
Aplikacija ukljucena        (17-Oct-15 11:57:11 AM)
Aplikacija iskljucena        (17-Oct-15 11:59:08 AM)
Aplikacija ukljucena        (17-Oct-15 12:02:09 PM)
Aplikacija iskljucena        (17-Oct-15 12:04:04 PM)
Aplikacija ukljucena        (17-Oct-15 12:06:03 PM)
Aplikacija iskljucena        (17-Oct-15 12:08:29 PM)
Aplikacija ukljucena        (17-Oct-15 12:11:21 PM)
Aplikacija iskljucena        (17-Oct-15 12:11:40 PM)
Aplikacija ukljucena        (17-Oct-15 12:12:22 PM)
Aplikacija ukljucena        (17-Oct-15 12:13:07 PM)
Aplikacija iskljucena        (17-Oct-15 12:15:05 PM)
Aplikacija ukljucena        (17-Oct-15 12:18:43 PM)
Aplikacija iskljucena        (17-Oct-15 12:20:52 PM)
Aplikacija ukljucena        (17-Oct-15 12:20:56 PM)
Aplikacija iskljucena        (17-Oct-15 12:24:04 PM)
Aplikacija ukljucena        (17-Oct-15 12:27:49 PM)
Aplikacija iskljucena        (17-Oct-15 12:28:20 PM)
Aplikacija ukljucena        (17-Oct-15 12:52:15 PM)
Aplikacija iskljucena        (17-Oct-15 12:52:34 PM)
Aplikacija ukljucena        (17-Oct-15 12:52:35 PM)
Aplikacija iskljucena        (17-Oct-15 1:12:21 PM)
Aplikacija ukljucena        (17-Oct-15 1:16:48 PM)
Aplikacija ukljucena        (17-Oct-15 1:17:04 PM)
Aplikacija ukljucena        (17-Oct-15 1:17:42 PM)
Aplikacija ukljucena        (17-Oct-15 1:18:18 PM)
Aplikacija ukljucena        (17-Oct-15 1:18:50 PM)
Aplikacija iskljucena        (17-Oct-15 1:19:54 PM)
Aplikacija ukljucena        (18-Oct-15 3:24:21 PM)
Aplikacija ukljucena        (18-Oct-15 3:36:27 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 3:36:33 PM)
Aplikacija iskljucena        (18-Oct-15 3:36:40 PM)
Aplikacija ukljucena        (18-Oct-15 3:38:21 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 3:38:37 PM)
Sequence contains no elements  {drawFittingGraphic()}        (18-Oct-15 4:16:01 PM)
Sequence contains no elements  {drawFittingGraphic()}        (18-Oct-15 4:16:02 PM)
Sequence contains no elements  {drawFittingGraphic()}        (18-Oct-15 4:17:35 PM)
Sequence contains no elements  {drawFittingGraphic()}        (18-Oct-15 4:17:55 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:18:24 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:22:44 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:22:46 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:22:47 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:22:48 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:25:34 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:26:17 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:26:18 PM)
Sequence contains no elements  {drawFittingGraphic()}        (18-Oct-15 4:26:32 PM)
Sequence contains no elements  {drawFittingGraphic()}        (18-Oct-15 4:27:01 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:32:50 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:32:52 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:32:52 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:32:54 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:36:38 PM)
Aplikacija iskljucena        (18-Oct-15 4:37:19 PM)
Aplikacija ukljucena        (18-Oct-15 4:39:46 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:39:55 PM)
Sequence contains no elements  {drawFittingGraphic()}        (18-Oct-15 4:41:13 PM)
Sequence contains no elements  {drawFittingGraphic()}        (18-Oct-15 4:41:14 PM)
Sequence contains no elements  {drawFittingGraphic()}        (18-Oct-15 4:41:15 PM)
Sequence contains no elements  {drawFittingGraphic()}        (18-Oct-15 4:41:16 PM)
Aplikacija iskljucena        (18-Oct-15 4:51:00 PM)
Aplikacija ukljucena        (18-Oct-15 4:52:52 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:56:42 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:56:51 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:57:35 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:57:52 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:58:06 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (18-Oct-15 4:58:11 PM)
Aplikacija iskljucena        (18-Oct-15 5:01:24 PM)
Aplikacija ukljucena        (19-Oct-15 4:06:08 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (19-Oct-15 4:16:05 PM)
Aplikacija ukljucena        (19-Oct-15 4:31:15 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (19-Oct-15 4:31:40 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (19-Oct-15 4:37:01 PM)
Aplikacija ukljucena        (19-Oct-15 4:39:48 PM)
Aplikacija iskljucena        (19-Oct-15 4:40:39 PM)
Aplikacija ukljucena        (19-Oct-15 4:44:14 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (19-Oct-15 4:52:29 PM)
Aplikacija ukljucena        (19-Oct-15 5:07:13 PM)
Aplikacija ukljucena        (19-Oct-15 5:07:24 PM)
Aplikacija ukljucena        (19-Oct-15 5:10:08 PM)
Aplikacija ukljucena        (19-Oct-15 5:18:14 PM)
Aplikacija ukljucena        (19-Oct-15 5:18:21 PM)
Aplikacija iskljucena        (19-Oct-15 5:18:54 PM)
Aplikacija ukljucena        (19-Oct-15 5:19:04 PM)
Aplikacija ukljucena        (19-Oct-15 5:19:18 PM)
Aplikacija ukljucena        (19-Oct-15 5:21:08 PM)
Aplikacija iskljucena        (19-Oct-15 5:31:20 PM)
Aplikacija ukljucena        (19-Oct-15 6:31:06 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (19-Oct-15 6:34:02 PM)
Aplikacija iskljucena        (19-Oct-15 6:36:55 PM)
Aplikacija ukljucena        (19-Oct-15 6:36:57 PM)
Aplikacija iskljucena        (19-Oct-15 6:38:26 PM)
Aplikacija ukljucena        (19-Oct-15 6:38:28 PM)
Aplikacija iskljucena        (19-Oct-15 6:44:35 PM)
Aplikacija ukljucena        (19-Oct-15 6:44:38 PM)
Aplikacija iskljucena        (19-Oct-15 6:59:25 PM)
Aplikacija ukljucena        (19-Oct-15 6:59:30 PM)
Aplikacija iskljucena        (19-Oct-15 7:26:26 PM)
Aplikacija ukljucena        (20-Oct-15 11:07:21 AM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (20-Oct-15 11:24:42 AM)
Aplikacija iskljucena        (20-Oct-15 12:55:12 PM)
Aplikacija ukljucena        (20-Oct-15 5:12:27 PM)
Aplikacija iskljucena        (20-Oct-15 5:22:26 PM)
Aplikacija ukljucena        (20-Oct-15 5:25:59 PM)
Aplikacija ukljucena        (20-Oct-15 5:31:14 PM)
Aplikacija ukljucena        (20-Oct-15 5:42:01 PM)
Aplikacija iskljucena        (20-Oct-15 5:42:26 PM)
Aplikacija ukljucena        (20-Oct-15 5:42:43 PM)
Sequence contains no elements  {drawFittingGraphic()}        (20-Oct-15 5:46:36 PM)
Sequence contains no elements  {drawFittingGraphic()}        (20-Oct-15 5:46:41 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (20-Oct-15 5:46:43 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (20-Oct-15 5:46:44 PM)
Aplikacija iskljucena        (20-Oct-15 5:59:56 PM)
Aplikacija ukljucena        (20-Oct-15 6:00:24 PM)
Aplikacija iskljucena        (20-Oct-15 6:04:18 PM)
Aplikacija ukljucena        (20-Oct-15 6:15:05 PM)
Aplikacija ukljucena        (20-Oct-15 6:18:45 PM)
Aplikacija ukljucena        (20-Oct-15 6:50:48 PM)
Aplikacija iskljucena        (20-Oct-15 6:51:58 PM)
Aplikacija ukljucena        (20-Oct-15 6:53:52 PM)
Aplikacija ukljucena        (20-Oct-15 6:59:16 PM)
Aplikacija ukljucena        (20-Oct-15 7:00:16 PM)
Aplikacija iskljucena        (20-Oct-15 7:00:59 PM)
Aplikacija ukljucena        (20-Oct-15 7:01:24 PM)
Aplikacija iskljucena        (20-Oct-15 7:03:49 PM)
Aplikacija ukljucena        (20-Oct-15 7:03:52 PM)
Aplikacija ukljucena        (20-Oct-15 7:08:16 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (20-Oct-15 7:08:33 PM)
Aplikacija ukljucena        (20-Oct-15 7:10:36 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (20-Oct-15 7:12:34 PM)
Aplikacija ukljucena        (20-Oct-15 7:15:06 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (20-Oct-15 7:15:23 PM)
Aplikacija ukljucena        (20-Oct-15 7:17:12 PM)
Aplikacija ukljucena        (20-Oct-15 7:18:53 PM)
Aplikacija iskljucena        (20-Oct-15 7:20:27 PM)
Aplikacija ukljucena        (20-Oct-15 7:20:40 PM)
Aplikacija ukljucena        (20-Oct-15 7:24:13 PM)
Aplikacija iskljucena        (20-Oct-15 7:25:10 PM)
Aplikacija ukljucena        (20-Oct-15 7:26:21 PM)
Aplikacija iskljucena        (20-Oct-15 7:27:09 PM)
Aplikacija ukljucena        (20-Oct-15 7:29:06 PM)
Aplikacija iskljucena        (20-Oct-15 7:29:51 PM)
Aplikacija ukljucena        (20-Oct-15 7:30:40 PM)
Aplikacija iskljucena        (20-Oct-15 7:33:55 PM)
Aplikacija ukljucena        (20-Oct-15 7:35:36 PM)
Aplikacija iskljucena        (20-Oct-15 7:36:07 PM)
Aplikacija ukljucena        (20-Oct-15 7:36:15 PM)
Aplikacija iskljucena        (20-Oct-15 7:39:26 PM)
Aplikacija ukljucena        (20-Oct-15 7:39:32 PM)
Aplikacija iskljucena        (20-Oct-15 7:58:23 PM)
Aplikacija ukljucena        (20-Oct-15 7:59:40 PM)
Aplikacija iskljucena        (20-Oct-15 8:01:16 PM)
Aplikacija ukljucena        (20-Oct-15 8:02:27 PM)
Aplikacija ukljucena        (20-Oct-15 8:04:10 PM)
Aplikacija iskljucena        (20-Oct-15 8:09:57 PM)
Aplikacija ukljucena        (20-Oct-15 8:11:31 PM)
Aplikacija ukljucena        (20-Oct-15 8:12:20 PM)
Aplikacija iskljucena        (20-Oct-15 8:12:50 PM)
Aplikacija ukljucena        (20-Oct-15 8:16:17 PM)
Aplikacija iskljucena        (20-Oct-15 8:18:47 PM)
Aplikacija ukljucena        (20-Oct-15 8:19:28 PM)
Aplikacija ukljucena        (20-Oct-15 8:20:56 PM)
Aplikacija ukljucena        (20-Oct-15 8:23:33 PM)
Aplikacija iskljucena        (20-Oct-15 8:24:14 PM)
Aplikacija ukljucena        (20-Oct-15 8:24:20 PM)
Aplikacija iskljucena        (20-Oct-15 8:25:24 PM)
Aplikacija ukljucena        (20-Oct-15 8:26:37 PM)
Aplikacija iskljucena        (20-Oct-15 8:27:41 PM)
Aplikacija ukljucena        (20-Oct-15 8:29:07 PM)
Aplikacija iskljucena        (20-Oct-15 8:40:13 PM)
Aplikacija ukljucena        (20-Oct-15 8:41:21 PM)
Aplikacija iskljucena        (20-Oct-15 8:51:03 PM)
Aplikacija ukljucena        (20-Oct-15 8:56:29 PM)
Aplikacija iskljucena        (20-Oct-15 8:56:52 PM)
Aplikacija ukljucena        (21-Oct-15 8:41:29 AM)
Aplikacija iskljucena        (21-Oct-15 9:09:28 AM)
Aplikacija ukljucena        (21-Oct-15 9:09:31 AM)
Sequence contains no elements  {drawFittingGraphic()}        (21-Oct-15 10:13:14 AM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (21-Oct-15 10:16:17 AM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (21-Oct-15 10:16:39 AM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (21-Oct-15 10:17:43 AM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (21-Oct-15 10:17:44 AM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (21-Oct-15 10:18:11 AM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (21-Oct-15 10:18:36 AM)
Sequence contains no elements  {drawFittingGraphic()}        (21-Oct-15 11:23:46 AM)
Sequence contains no elements  {drawFittingGraphic()}        (21-Oct-15 11:23:48 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (21-Oct-15 11:23:48 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (21-Oct-15 11:23:48 AM)
Sequence contains no elements  {drawFittingGraphic()}        (21-Oct-15 11:26:52 AM)
Sequence contains no elements  {drawFittingGraphic()}        (21-Oct-15 11:27:00 AM)
Sequence contains no elements  {drawFittingGraphic()}        (21-Oct-15 11:28:29 AM)
Sequence contains no elements  {drawFittingGraphic()}        (21-Oct-15 11:28:41 AM)
Aplikacija iskljucena        (21-Oct-15 11:40:14 AM)
Aplikacija ukljucena        (21-Oct-15 11:40:17 AM)
Aplikacija iskljucena        (21-Oct-15 11:42:57 AM)
Aplikacija ukljucena        (21-Oct-15 5:12:20 PM)
Aplikacija iskljucena        (21-Oct-15 5:20:54 PM)
Aplikacija ukljucena        (21-Oct-15 5:25:28 PM)
Aplikacija iskljucena        (21-Oct-15 5:29:27 PM)
Aplikacija ukljucena        (21-Oct-15 5:34:45 PM)
Aplikacija iskljucena        (21-Oct-15 5:34:59 PM)
Aplikacija ukljucena        (21-Oct-15 5:35:12 PM)
Aplikacija iskljucena        (21-Oct-15 5:35:18 PM)
Aplikacija ukljucena        (21-Oct-15 5:36:16 PM)
Aplikacija iskljucena        (21-Oct-15 5:36:33 PM)
Aplikacija ukljucena        (21-Oct-15 5:37:18 PM)
Aplikacija iskljucena        (21-Oct-15 5:37:29 PM)
Aplikacija ukljucena        (21-Oct-15 5:37:46 PM)
Aplikacija iskljucena        (21-Oct-15 5:37:53 PM)
Aplikacija ukljucena        (21-Oct-15 5:38:00 PM)
Aplikacija iskljucena        (21-Oct-15 5:38:07 PM)
Aplikacija ukljucena        (21-Oct-15 5:39:02 PM)
Aplikacija iskljucena        (21-Oct-15 5:39:09 PM)
Aplikacija ukljucena        (21-Oct-15 5:39:22 PM)
Aplikacija iskljucena        (21-Oct-15 5:39:35 PM)
Aplikacija ukljucena        (21-Oct-15 5:42:43 PM)
Aplikacija iskljucena        (21-Oct-15 5:43:25 PM)
Aplikacija ukljucena        (21-Oct-15 5:47:55 PM)
Aplikacija iskljucena        (21-Oct-15 5:48:39 PM)
Aplikacija ukljucena        (21-Oct-15 5:48:49 PM)
Aplikacija ukljucena        (21-Oct-15 5:50:34 PM)
Aplikacija iskljucena        (21-Oct-15 5:51:30 PM)
Aplikacija ukljucena        (21-Oct-15 5:53:52 PM)
Aplikacija ukljucena        (21-Oct-15 5:56:40 PM)
Aplikacija ukljucena        (21-Oct-15 5:58:50 PM)
Aplikacija iskljucena        (21-Oct-15 5:59:13 PM)
Aplikacija ukljucena        (21-Oct-15 6:00:21 PM)
Aplikacija iskljucena        (21-Oct-15 6:01:53 PM)
Aplikacija ukljucena        (21-Oct-15 6:02:16 PM)
Aplikacija ukljucena        (21-Oct-15 6:05:33 PM)
Aplikacija iskljucena        (21-Oct-15 6:06:05 PM)
Aplikacija ukljucena        (21-Oct-15 6:06:25 PM)
Aplikacija iskljucena        (21-Oct-15 6:11:06 PM)
Aplikacija ukljucena        (21-Oct-15 6:11:51 PM)
Aplikacija iskljucena        (21-Oct-15 6:12:30 PM)
Aplikacija ukljucena        (21-Oct-15 6:12:41 PM)
Aplikacija iskljucena        (21-Oct-15 6:13:48 PM)
Aplikacija ukljucena        (21-Oct-15 6:14:56 PM)
Aplikacija iskljucena        (21-Oct-15 6:15:02 PM)
Aplikacija ukljucena        (21-Oct-15 6:15:10 PM)
Aplikacija iskljucena        (21-Oct-15 6:15:42 PM)
Aplikacija ukljucena        (21-Oct-15 6:16:18 PM)
Aplikacija iskljucena        (21-Oct-15 6:16:46 PM)
Aplikacija ukljucena        (21-Oct-15 6:18:10 PM)
Aplikacija iskljucena        (21-Oct-15 6:18:17 PM)
Aplikacija ukljucena        (21-Oct-15 6:18:32 PM)
Aplikacija iskljucena        (21-Oct-15 6:19:02 PM)
Aplikacija ukljucena        (21-Oct-15 6:21:26 PM)
Aplikacija iskljucena        (21-Oct-15 6:57:57 PM)
Aplikacija ukljucena        (21-Oct-15 6:59:47 PM)
Aplikacija iskljucena        (21-Oct-15 7:00:34 PM)
Aplikacija ukljucena        (21-Oct-15 7:02:08 PM)
Aplikacija ukljucena        (21-Oct-15 7:02:48 PM)
Aplikacija iskljucena        (21-Oct-15 7:02:58 PM)
Aplikacija ukljucena        (21-Oct-15 7:05:44 PM)
Aplikacija iskljucena        (21-Oct-15 7:07:02 PM)
Aplikacija ukljucena        (21-Oct-15 7:08:34 PM)
Aplikacija iskljucena        (21-Oct-15 7:08:59 PM)
Aplikacija ukljucena        (21-Oct-15 7:09:22 PM)
Aplikacija iskljucena        (21-Oct-15 7:09:52 PM)
Aplikacija ukljucena        (21-Oct-15 7:10:05 PM)
Aplikacija iskljucena        (21-Oct-15 7:10:17 PM)
Aplikacija ukljucena        (21-Oct-15 7:10:26 PM)
Aplikacija iskljucena        (21-Oct-15 7:14:14 PM)
Aplikacija ukljucena        (21-Oct-15 7:15:55 PM)
Aplikacija iskljucena        (21-Oct-15 7:18:42 PM)
Aplikacija ukljucena        (21-Oct-15 7:20:32 PM)
Aplikacija ukljucena        (21-Oct-15 7:35:49 PM)
Aplikacija iskljucena        (21-Oct-15 7:36:24 PM)
Aplikacija ukljucena        (21-Oct-15 7:40:03 PM)
Aplikacija iskljucena        (21-Oct-15 7:40:54 PM)
Aplikacija ukljucena        (21-Oct-15 7:41:06 PM)
Aplikacija iskljucena        (21-Oct-15 7:45:49 PM)
Aplikacija ukljucena        (21-Oct-15 7:46:34 PM)
Aplikacija iskljucena        (21-Oct-15 7:47:01 PM)
Aplikacija ukljucena        (21-Oct-15 7:47:04 PM)
Aplikacija ukljucena        (21-Oct-15 7:47:25 PM)
Aplikacija ukljucena        (21-Oct-15 7:47:44 PM)
Aplikacija ukljucena        (21-Oct-15 7:47:56 PM)
Aplikacija iskljucena        (21-Oct-15 7:49:41 PM)
Aplikacija ukljucena        (21-Oct-15 7:53:41 PM)
Aplikacija ukljucena        (21-Oct-15 8:03:40 PM)
Aplikacija ukljucena        (21-Oct-15 8:04:24 PM)
Aplikacija iskljucena        (21-Oct-15 8:04:53 PM)
Aplikacija ukljucena        (22-Oct-15 9:54:21 AM)
Aplikacija ukljucena        (22-Oct-15 10:04:47 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 10:04:48 AM)
Aplikacija iskljucena        (22-Oct-15 10:05:03 AM)
Aplikacija ukljucena        (22-Oct-15 10:05:05 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 10:05:06 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 10:08:01 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 10:18:47 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 10:18:47 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 10:18:47 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 10:19:51 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 10:20:01 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 10:20:03 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 10:20:33 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 10:21:43 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 10:21:45 AM)
Aplikacija iskljucena        (22-Oct-15 11:08:52 AM)
Aplikacija ukljucena        (22-Oct-15 11:08:57 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:29:43 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:29:43 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:29:43 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:29:44 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:30:40 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:30:45 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:50:46 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:50:46 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:50:46 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:50:47 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:51:30 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:51:33 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:52:05 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:52:16 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:53:11 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:53:16 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:53:19 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:53:20 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:53:28 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:53:57 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:54:00 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:54:07 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:54:11 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:54:11 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:54:18 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:54:23 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:54:49 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:55:22 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:56:09 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:56:13 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:56:22 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:56:37 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:57:16 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 11:59:45 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:00:17 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:00:18 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:00:22 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:00:22 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:03:53 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:07:41 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:07:42 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:10:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:10:12 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:10:17 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:10:27 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:10:35 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:10:42 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:10:47 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:10:51 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:10:56 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:11:02 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:11:09 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:11:15 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:11:20 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:11:26 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:11:30 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:11:35 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:11:39 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:11:43 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:12:22 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:12:26 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:12:29 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:12:33 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:12:37 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:12:42 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:12:49 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:12:55 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:13:02 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:13:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:13:11 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:13:17 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:13:21 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:13:26 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:13:30 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:13:38 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:13:48 PM)
Aplikacija iskljucena        (22-Oct-15 12:17:15 PM)
Aplikacija ukljucena        (22-Oct-15 12:32:32 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:32:33 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:35:21 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:35:21 PM)
Aplikacija iskljucena        (22-Oct-15 12:35:47 PM)
Aplikacija ukljucena        (22-Oct-15 12:38:47 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:38:48 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:47:08 PM)
Aplikacija iskljucena        (22-Oct-15 12:48:09 PM)
Aplikacija ukljucena        (22-Oct-15 12:55:21 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:55:26 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:56:21 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:57:13 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:57:35 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:57:43 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:59:44 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 12:59:48 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:01:23 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:01:39 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:01:45 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:03:36 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:03:37 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:05:55 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:06:49 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:06:51 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:10:54 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:10:55 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:11:41 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:11:43 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:15:21 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:16:38 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:16:39 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:17:53 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:17:55 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:19:38 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:19:39 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:22:46 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:22:48 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:24:15 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:24:17 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:25:15 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (22-Oct-15 1:25:16 PM)
Aplikacija iskljucena        (22-Oct-15 1:25:29 PM)
Aplikacija ukljucena        (23-Oct-15 9:45:10 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (23-Oct-15 9:45:11 AM)
Aplikacija iskljucena        (23-Oct-15 10:06:43 AM)
Aplikacija ukljucena        (23-Oct-15 10:06:45 AM)
Aplikacija iskljucena        (23-Oct-15 10:08:04 AM)
Aplikacija ukljucena        (23-Oct-15 10:09:47 AM)
Sequence contains no elements  {drawFittingGraphic()}        (23-Oct-15 11:06:33 AM)
Sequence contains no elements  {drawFittingGraphic()}        (23-Oct-15 11:06:41 AM)
Sequence contains no elements  {drawFittingGraphic()}        (23-Oct-15 11:32:24 AM)
Aplikacija iskljucena        (23-Oct-15 11:40:43 AM)
Aplikacija ukljucena        (24-Oct-15 9:13:34 AM)
Aplikacija iskljucena        (24-Oct-15 9:17:26 AM)
Aplikacija ukljucena        (24-Oct-15 9:17:28 AM)
Aplikacija iskljucena        (24-Oct-15 9:19:55 AM)
Aplikacija ukljucena        (24-Oct-15 9:19:57 AM)
Aplikacija iskljucena        (24-Oct-15 9:22:31 AM)
Aplikacija ukljucena        (24-Oct-15 9:24:30 AM)
Aplikacija iskljucena        (24-Oct-15 9:26:11 AM)
Aplikacija ukljucena        (24-Oct-15 9:30:39 AM)
Aplikacija iskljucena        (24-Oct-15 9:30:47 AM)
Aplikacija ukljucena        (24-Oct-15 9:31:05 AM)
Aplikacija iskljucena        (24-Oct-15 9:33:09 AM)
Aplikacija ukljucena        (24-Oct-15 9:42:04 AM)
Aplikacija iskljucena        (24-Oct-15 9:42:21 AM)
Aplikacija ukljucena        (24-Oct-15 9:47:40 AM)
Aplikacija iskljucena        (24-Oct-15 9:49:28 AM)
Aplikacija ukljucena        (24-Oct-15 9:54:41 AM)
Aplikacija iskljucena        (24-Oct-15 9:55:51 AM)
Aplikacija ukljucena        (24-Oct-15 9:57:51 AM)
Aplikacija iskljucena        (24-Oct-15 9:57:53 AM)
Aplikacija ukljucena        (24-Oct-15 10:02:39 AM)
Aplikacija iskljucena        (24-Oct-15 10:03:15 AM)
Aplikacija ukljucena        (24-Oct-15 10:04:53 AM)
Aplikacija iskljucena        (24-Oct-15 10:05:53 AM)
Aplikacija ukljucena        (24-Oct-15 10:06:37 AM)
Aplikacija iskljucena        (24-Oct-15 10:06:46 AM)
Aplikacija ukljucena        (24-Oct-15 10:07:03 AM)
Aplikacija iskljucena        (24-Oct-15 10:09:03 AM)
Aplikacija ukljucena        (24-Oct-15 10:23:22 AM)
Aplikacija iskljucena        (24-Oct-15 10:24:33 AM)
Aplikacija ukljucena        (24-Oct-15 10:28:44 AM)
Aplikacija iskljucena        (24-Oct-15 10:30:19 AM)
Aplikacija ukljucena        (24-Oct-15 10:37:42 AM)
Aplikacija iskljucena        (24-Oct-15 10:37:44 AM)
Aplikacija ukljucena        (24-Oct-15 10:39:16 AM)
Aplikacija iskljucena        (24-Oct-15 10:47:03 AM)
Aplikacija ukljucena        (24-Oct-15 11:06:33 AM)
Aplikacija iskljucena        (24-Oct-15 11:06:56 AM)
Aplikacija ukljucena        (24-Oct-15 11:08:22 AM)
Aplikacija iskljucena        (24-Oct-15 11:09:46 AM)
Aplikacija ukljucena        (24-Oct-15 11:13:03 AM)
Aplikacija iskljucena        (24-Oct-15 11:18:53 AM)
Aplikacija ukljucena        (24-Oct-15 11:19:31 AM)
Aplikacija iskljucena        (24-Oct-15 11:23:38 AM)
Aplikacija ukljucena        (24-Oct-15 11:23:40 AM)
Aplikacija iskljucena        (24-Oct-15 11:24:07 AM)
Aplikacija ukljucena        (24-Oct-15 11:24:15 AM)
Aplikacija iskljucena        (24-Oct-15 11:27:50 AM)
Aplikacija ukljucena        (24-Oct-15 11:31:24 AM)
Aplikacija iskljucena        (24-Oct-15 11:31:51 AM)
Aplikacija ukljucena        (24-Oct-15 11:31:55 AM)
Aplikacija iskljucena        (24-Oct-15 11:32:28 AM)
Aplikacija ukljucena        (24-Oct-15 11:34:29 AM)
Aplikacija iskljucena        (24-Oct-15 11:38:36 AM)
Aplikacija ukljucena        (24-Oct-15 11:43:17 AM)
Aplikacija iskljucena        (24-Oct-15 11:43:55 AM)
Aplikacija ukljucena        (24-Oct-15 11:44:14 AM)
Aplikacija iskljucena        (24-Oct-15 11:44:31 AM)
Aplikacija ukljucena        (24-Oct-15 11:44:40 AM)
Aplikacija iskljucena        (24-Oct-15 11:44:53 AM)
Aplikacija ukljucena        (24-Oct-15 11:45:23 AM)
Aplikacija iskljucena        (24-Oct-15 11:45:49 AM)
Aplikacija ukljucena        (24-Oct-15 11:46:10 AM)
Aplikacija iskljucena        (24-Oct-15 11:46:57 AM)
Aplikacija ukljucena        (24-Oct-15 11:47:27 AM)
Aplikacija ukljucena        (24-Oct-15 11:47:40 AM)
Aplikacija iskljucena        (24-Oct-15 11:47:57 AM)
Aplikacija ukljucena        (24-Oct-15 11:48:35 AM)
Aplikacija iskljucena        (24-Oct-15 11:49:00 AM)
Aplikacija ukljucena        (24-Oct-15 11:53:21 AM)
Aplikacija iskljucena        (24-Oct-15 12:00:32 PM)
Aplikacija ukljucena        (24-Oct-15 12:07:06 PM)
Aplikacija iskljucena        (24-Oct-15 12:08:22 PM)
Aplikacija ukljucena        (24-Oct-15 12:13:10 PM)
Aplikacija iskljucena        (24-Oct-15 12:13:56 PM)
Aplikacija ukljucena        (24-Oct-15 12:15:34 PM)
Aplikacija iskljucena        (24-Oct-15 12:15:56 PM)
Aplikacija ukljucena        (24-Oct-15 12:16:03 PM)
Aplikacija ukljucena        (24-Oct-15 12:21:11 PM)
Aplikacija ukljucena        (24-Oct-15 12:21:37 PM)
Aplikacija iskljucena        (24-Oct-15 12:21:52 PM)
Aplikacija ukljucena        (24-Oct-15 12:23:30 PM)
Aplikacija iskljucena        (24-Oct-15 12:23:50 PM)
Aplikacija ukljucena        (24-Oct-15 12:29:38 PM)
Aplikacija iskljucena        (24-Oct-15 12:30:10 PM)
Aplikacija ukljucena        (24-Oct-15 12:32:46 PM)
Aplikacija ukljucena        (24-Oct-15 12:34:35 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 12:45:07 PM)
Aplikacija iskljucena        (24-Oct-15 12:48:19 PM)
Aplikacija ukljucena        (24-Oct-15 12:50:57 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 12:50:58 PM)
Aplikacija iskljucena        (24-Oct-15 12:51:55 PM)
Aplikacija ukljucena        (24-Oct-15 12:55:54 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 12:58:04 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 12:58:04 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 12:58:04 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 12:58:04 PM)
Aplikacija iskljucena        (24-Oct-15 1:01:17 PM)
Aplikacija ukljucena        (24-Oct-15 1:02:24 PM)
Aplikacija iskljucena        (24-Oct-15 1:02:29 PM)
Aplikacija ukljucena        (24-Oct-15 1:02:42 PM)
Aplikacija iskljucena        (24-Oct-15 1:02:48 PM)
Aplikacija ukljucena        (24-Oct-15 1:03:43 PM)
Aplikacija iskljucena        (24-Oct-15 1:03:54 PM)
Aplikacija ukljucena        (24-Oct-15 1:04:14 PM)
Aplikacija iskljucena        (24-Oct-15 1:04:27 PM)
Aplikacija ukljucena        (24-Oct-15 1:04:59 PM)
Aplikacija iskljucena        (24-Oct-15 1:05:16 PM)
Aplikacija ukljucena        (24-Oct-15 1:05:49 PM)
Aplikacija iskljucena        (24-Oct-15 1:06:26 PM)
Aplikacija ukljucena        (24-Oct-15 1:06:34 PM)
Aplikacija iskljucena        (24-Oct-15 1:09:26 PM)
Aplikacija ukljucena        (24-Oct-15 1:10:52 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:13:14 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:13:14 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:13:14 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:13:14 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:13:56 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:13:59 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:14:02 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (24-Oct-15 1:14:24 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:15:41 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (24-Oct-15 1:16:02 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (24-Oct-15 1:16:15 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (24-Oct-15 1:16:23 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:16:27 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:16:38 PM)
Aplikacija ukljucena        (24-Oct-15 1:21:22 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:21:24 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:21:31 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:21:42 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (24-Oct-15 1:21:46 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (24-Oct-15 1:21:53 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (24-Oct-15 1:22:03 PM)
Aplikacija iskljucena        (24-Oct-15 1:22:22 PM)
Aplikacija iskljucena        (24-Oct-15 1:22:28 PM)
Aplikacija ukljucena        (24-Oct-15 1:25:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:25:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:25:19 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:25:22 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (24-Oct-15 1:25:27 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (24-Oct-15 1:25:32 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (24-Oct-15 1:25:39 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (24-Oct-15 1:26:13 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (24-Oct-15 1:26:32 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (24-Oct-15 1:26:54 PM)
Aplikacija iskljucena        (24-Oct-15 1:27:08 PM)
Aplikacija ukljucena        (24-Oct-15 1:30:27 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:30:28 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:30:34 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:30:36 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (24-Oct-15 1:30:40 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:35:18 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:36:59 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:36:59 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 1:36:59 PM)
Aplikacija iskljucena        (24-Oct-15 1:40:14 PM)
Aplikacija ukljucena        (24-Oct-15 1:45:40 PM)
Aplikacija iskljucena        (24-Oct-15 1:45:48 PM)
Aplikacija ukljucena        (24-Oct-15 1:51:14 PM)
Aplikacija iskljucena        (24-Oct-15 1:51:17 PM)
Aplikacija ukljucena        (24-Oct-15 4:42:34 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (24-Oct-15 5:12:32 PM)
Aplikacija iskljucena        (24-Oct-15 5:39:27 PM)
Aplikacija ukljucena        (24-Oct-15 5:39:31 PM)
Aplikacija iskljucena        (24-Oct-15 5:54:26 PM)
Aplikacija ukljucena        (24-Oct-15 5:54:29 PM)
Aplikacija iskljucena        (24-Oct-15 6:54:56 PM)
Aplikacija ukljucena        (24-Oct-15 6:54:59 PM)
Aplikacija iskljucena        (24-Oct-15 6:55:30 PM)
Aplikacija ukljucena        (24-Oct-15 6:55:32 PM)
Aplikacija iskljucena        (24-Oct-15 6:57:41 PM)
Aplikacija ukljucena        (25-Oct-15 9:01:04 AM)
Aplikacija iskljucena        (25-Oct-15 9:06:36 AM)
Aplikacija ukljucena        (25-Oct-15 9:07:48 AM)
Aplikacija iskljucena        (25-Oct-15 9:09:27 AM)
Aplikacija ukljucena        (25-Oct-15 9:09:31 AM)
Aplikacija iskljucena        (25-Oct-15 9:11:03 AM)
Aplikacija ukljucena        (25-Oct-15 9:13:28 AM)
Aplikacija ukljucena        (25-Oct-15 9:15:36 AM)
Aplikacija ukljucena        (25-Oct-15 9:17:33 AM)
Aplikacija iskljucena        (25-Oct-15 9:25:36 AM)
Aplikacija ukljucena        (25-Oct-15 9:36:02 AM)
Aplikacija iskljucena        (25-Oct-15 9:37:53 AM)
Aplikacija ukljucena        (25-Oct-15 9:38:06 AM)
Aplikacija iskljucena        (25-Oct-15 9:38:29 AM)
Aplikacija ukljucena        (25-Oct-15 9:41:56 AM)
Aplikacija iskljucena        (25-Oct-15 9:42:33 AM)
Aplikacija ukljucena        (25-Oct-15 10:30:45 AM)
Aplikacija iskljucena        (25-Oct-15 10:31:15 AM)
Aplikacija ukljucena        (25-Oct-15 10:35:44 AM)
Aplikacija iskljucena        (25-Oct-15 10:36:10 AM)
Aplikacija ukljucena        (25-Oct-15 10:36:12 AM)
Aplikacija iskljucena        (25-Oct-15 10:36:38 AM)
Aplikacija ukljucena        (25-Oct-15 10:37:36 AM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (25-Oct-15 10:37:55 AM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (25-Oct-15 10:38:22 AM)
Aplikacija iskljucena        (25-Oct-15 10:38:35 AM)
Aplikacija ukljucena        (25-Oct-15 10:40:37 AM)
Aplikacija iskljucena        (25-Oct-15 10:41:21 AM)
Aplikacija ukljucena        (25-Oct-15 10:41:49 AM)
Aplikacija iskljucena        (25-Oct-15 10:42:24 AM)
Aplikacija ukljucena        (25-Oct-15 10:42:52 AM)
Aplikacija iskljucena        (25-Oct-15 10:44:08 AM)
Aplikacija ukljucena        (25-Oct-15 10:44:35 AM)
Aplikacija iskljucena        (25-Oct-15 10:45:33 AM)
Aplikacija ukljucena        (25-Oct-15 10:45:59 AM)
Aplikacija iskljucena        (25-Oct-15 10:52:57 AM)
Aplikacija ukljucena        (25-Oct-15 10:53:55 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:02:38 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:02:38 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:02:48 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:02:48 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:07:12 AM)
Height must be non-negative.  {drawFittingGraphic()}        (25-Oct-15 11:07:16 AM)
Aplikacija ukljucena        (25-Oct-15 11:08:15 AM)
Aplikacija ukljucena        (25-Oct-15 11:13:25 AM)
Aplikacija ukljucena        (25-Oct-15 11:13:38 AM)
Aplikacija iskljucena        (25-Oct-15 11:14:11 AM)
Aplikacija ukljucena        (25-Oct-15 11:16:57 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:20:29 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:20:29 AM)
Aplikacija ukljucena        (25-Oct-15 11:23:01 AM)
Aplikacija iskljucena        (25-Oct-15 11:23:34 AM)
Aplikacija ukljucena        (25-Oct-15 11:29:50 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:31:25 AM)
Aplikacija iskljucena        (25-Oct-15 11:31:47 AM)
Aplikacija ukljucena        (25-Oct-15 11:31:50 AM)
Aplikacija iskljucena        (25-Oct-15 11:32:03 AM)
Aplikacija ukljucena        (25-Oct-15 11:32:05 AM)
Aplikacija iskljucena        (25-Oct-15 11:32:51 AM)
Aplikacija ukljucena        (25-Oct-15 11:32:53 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:32:54 AM)
Aplikacija iskljucena        (25-Oct-15 11:33:53 AM)
Aplikacija ukljucena        (25-Oct-15 11:35:21 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:35:22 AM)
Aplikacija iskljucena        (25-Oct-15 11:40:10 AM)
Aplikacija ukljucena        (25-Oct-15 11:40:15 AM)
Aplikacija iskljucena        (25-Oct-15 11:43:01 AM)
Aplikacija ukljucena        (25-Oct-15 11:46:06 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:52:47 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:52:47 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:52:47 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:52:50 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:52:50 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (25-Oct-15 11:52:58 AM)
Aplikacija iskljucena        (25-Oct-15 11:57:49 AM)
Aplikacija ukljucena        (25-Oct-15 12:00:59 PM)
Aplikacija iskljucena        (25-Oct-15 12:01:30 PM)
Aplikacija ukljucena        (25-Oct-15 12:02:47 PM)
Aplikacija iskljucena        (25-Oct-15 12:03:48 PM)
Aplikacija ukljucena        (25-Oct-15 12:04:11 PM)
Aplikacija ukljucena        (25-Oct-15 12:11:47 PM)
Aplikacija iskljucena        (25-Oct-15 12:14:48 PM)
Aplikacija ukljucena        (25-Oct-15 12:15:21 PM)
Aplikacija ukljucena        (25-Oct-15 12:17:21 PM)
Aplikacija iskljucena        (25-Oct-15 12:23:44 PM)
Aplikacija ukljucena        (25-Oct-15 12:24:43 PM)
Aplikacija ukljucena        (25-Oct-15 12:27:38 PM)
Aplikacija iskljucena        (25-Oct-15 12:29:35 PM)
Aplikacija ukljucena        (25-Oct-15 12:30:41 PM)
Aplikacija ukljucena        (25-Oct-15 12:36:20 PM)
Aplikacija iskljucena        (25-Oct-15 12:38:03 PM)
Aplikacija ukljucena        (25-Oct-15 12:38:09 PM)
Aplikacija iskljucena        (25-Oct-15 12:40:32 PM)
Aplikacija ukljucena        (25-Oct-15 12:40:58 PM)
Aplikacija iskljucena        (25-Oct-15 12:41:03 PM)
Aplikacija ukljucena        (25-Oct-15 12:41:51 PM)
Aplikacija iskljucena        (25-Oct-15 12:52:14 PM)
Aplikacija ukljucena        (25-Oct-15 12:55:49 PM)
Aplikacija ukljucena        (25-Oct-15 12:58:50 PM)
Aplikacija ukljucena        (25-Oct-15 1:00:48 PM)
Aplikacija ukljucena        (25-Oct-15 1:01:02 PM)
Aplikacija ukljucena        (25-Oct-15 1:02:06 PM)
Aplikacija ukljucena        (25-Oct-15 1:03:30 PM)
Aplikacija iskljucena        (25-Oct-15 1:05:18 PM)
Aplikacija ukljucena        (25-Oct-15 1:05:20 PM)
Aplikacija iskljucena        (25-Oct-15 1:06:20 PM)
Aplikacija ukljucena        (25-Oct-15 1:06:21 PM)
Aplikacija iskljucena        (25-Oct-15 1:07:21 PM)
Aplikacija ukljucena        (25-Oct-15 1:09:42 PM)
Aplikacija iskljucena        (25-Oct-15 1:11:15 PM)
Aplikacija ukljucena        (25-Oct-15 1:11:28 PM)
Aplikacija iskljucena        (25-Oct-15 1:13:35 PM)
Aplikacija ukljucena        (25-Oct-15 1:13:51 PM)
Aplikacija iskljucena        (25-Oct-15 1:16:04 PM)
Aplikacija ukljucena        (25-Oct-15 1:16:21 PM)
Aplikacija iskljucena        (25-Oct-15 1:17:05 PM)
Aplikacija ukljucena        (25-Oct-15 1:18:24 PM)
Aplikacija iskljucena        (25-Oct-15 1:19:34 PM)
Aplikacija ukljucena        (25-Oct-15 1:19:51 PM)
Aplikacija iskljucena        (25-Oct-15 1:21:03 PM)
Aplikacija ukljucena        (25-Oct-15 1:22:31 PM)
Aplikacija ukljucena        (25-Oct-15 1:24:49 PM)
Aplikacija iskljucena        (25-Oct-15 1:25:27 PM)
Aplikacija ukljucena        (25-Oct-15 1:26:00 PM)
Aplikacija iskljucena        (25-Oct-15 1:26:34 PM)
Aplikacija ukljucena        (25-Oct-15 1:27:44 PM)
Aplikacija ukljucena        (25-Oct-15 1:33:32 PM)
Aplikacija iskljucena        (25-Oct-15 1:34:24 PM)
Aplikacija ukljucena        (25-Oct-15 1:35:08 PM)
Aplikacija iskljucena        (25-Oct-15 1:35:47 PM)
Aplikacija ukljucena        (25-Oct-15 1:35:53 PM)
Aplikacija iskljucena        (25-Oct-15 1:37:04 PM)
Aplikacija ukljucena        (25-Oct-15 1:37:29 PM)
Aplikacija ukljucena        (25-Oct-15 1:38:12 PM)
Aplikacija iskljucena        (25-Oct-15 1:42:12 PM)
Aplikacija ukljucena        (25-Oct-15 1:42:58 PM)
Aplikacija iskljucena        (25-Oct-15 1:44:12 PM)
Aplikacija ukljucena        (25-Oct-15 1:47:12 PM)
Aplikacija iskljucena        (25-Oct-15 1:47:47 PM)
Aplikacija ukljucena        (25-Oct-15 1:49:10 PM)
Aplikacija iskljucena        (25-Oct-15 1:50:17 PM)
Aplikacija ukljucena        (25-Oct-15 1:50:38 PM)
Aplikacija iskljucena        (25-Oct-15 1:51:37 PM)
Aplikacija ukljucena        (25-Oct-15 1:56:33 PM)
Aplikacija iskljucena        (25-Oct-15 1:57:00 PM)
Aplikacija ukljucena        (25-Oct-15 1:57:27 PM)
Aplikacija iskljucena        (25-Oct-15 1:57:47 PM)
Aplikacija ukljucena        (25-Oct-15 1:59:40 PM)
Aplikacija iskljucena        (25-Oct-15 2:00:19 PM)
Aplikacija ukljucena        (25-Oct-15 2:01:02 PM)
Aplikacija ukljucena        (25-Oct-15 2:09:28 PM)
Aplikacija iskljucena        (25-Oct-15 2:10:03 PM)
Aplikacija ukljucena        (25-Oct-15 2:13:44 PM)
Aplikacija iskljucena        (25-Oct-15 2:15:18 PM)
Aplikacija ukljucena        (25-Oct-15 2:15:24 PM)
Aplikacija iskljucena        (25-Oct-15 2:16:15 PM)
Aplikacija ukljucena        (25-Oct-15 2:16:37 PM)
Aplikacija iskljucena        (25-Oct-15 2:17:24 PM)
Aplikacija ukljucena        (25-Oct-15 2:18:54 PM)
Aplikacija iskljucena        (25-Oct-15 2:19:58 PM)
Aplikacija ukljucena        (25-Oct-15 2:22:23 PM)
Aplikacija iskljucena        (25-Oct-15 2:23:41 PM)
Aplikacija ukljucena        (10/25/2015 4:48:14 PM)
Aplikacija iskljucena        (10/25/2015 5:05:03 PM)
Aplikacija ukljucena        (10/25/2015 5:05:07 PM)
Aplikacija iskljucena        (10/25/2015 5:05:19 PM)
Aplikacija ukljucena        (10/25/2015 5:05:59 PM)
Aplikacija iskljucena        (10/25/2015 5:06:13 PM)
Aplikacija ukljucena        (10/25/2015 5:06:33 PM)
Aplikacija ukljucena        (10/25/2015 5:08:17 PM)
Aplikacija iskljucena        (10/25/2015 5:08:55 PM)
Aplikacija ukljucena        (10/25/2015 5:09:37 PM)
Aplikacija ukljucena        (10/25/2015 5:10:39 PM)
Aplikacija iskljucena        (10/25/2015 5:12:42 PM)
Aplikacija ukljucena        (10/25/2015 5:16:00 PM)
Aplikacija ukljucena        (10/25/2015 5:17:11 PM)
Aplikacija iskljucena        (10/25/2015 5:18:53 PM)
Aplikacija ukljucena        (10/25/2015 5:24:48 PM)
Aplikacija iskljucena        (10/25/2015 5:26:01 PM)
Aplikacija ukljucena        (10/25/2015 5:28:06 PM)
Aplikacija ukljucena        (10/25/2015 5:36:28 PM)
Aplikacija iskljucena        (10/25/2015 5:36:51 PM)
Aplikacija ukljucena        (10/25/2015 5:38:13 PM)
Aplikacija iskljucena        (10/25/2015 5:39:05 PM)
Aplikacija ukljucena        (10/25/2015 5:39:46 PM)
Aplikacija ukljucena        (10/25/2015 5:40:50 PM)
Aplikacija iskljucena        (10/25/2015 5:41:40 PM)
Aplikacija ukljucena        (10/25/2015 5:43:47 PM)
Aplikacija iskljucena        (10/25/2015 5:45:17 PM)
Aplikacija ukljucena        (10/25/2015 5:46:56 PM)
Aplikacija iskljucena        (10/25/2015 5:47:16 PM)
Aplikacija ukljucena        (10/25/2015 5:51:00 PM)
Aplikacija iskljucena        (10/25/2015 5:51:18 PM)
Aplikacija ukljucena        (10/25/2015 5:52:26 PM)
Aplikacija ukljucena        (10/25/2015 5:54:28 PM)
Aplikacija iskljucena        (10/25/2015 5:55:30 PM)
Aplikacija ukljucena        (10/25/2015 5:56:30 PM)
Aplikacija iskljucena        (10/25/2015 5:56:44 PM)
Aplikacija ukljucena        (10/25/2015 5:58:57 PM)
Aplikacija iskljucena        (10/25/2015 5:59:39 PM)
Aplikacija ukljucena        (10/25/2015 6:00:42 PM)
Aplikacija iskljucena        (10/25/2015 6:01:29 PM)
Aplikacija ukljucena        (10/25/2015 6:02:08 PM)
Aplikacija ukljucena        (10/25/2015 6:03:47 PM)
Aplikacija ukljucena        (10/25/2015 6:05:49 PM)
Aplikacija iskljucena        (10/25/2015 6:06:12 PM)
Aplikacija ukljucena        (10/25/2015 6:06:59 PM)
Aplikacija iskljucena        (10/25/2015 6:07:16 PM)
Aplikacija ukljucena        (10/25/2015 6:07:48 PM)
Aplikacija ukljucena        (10/25/2015 6:08:56 PM)
Aplikacija iskljucena        (10/25/2015 6:09:37 PM)
Aplikacija ukljucena        (10/25/2015 6:09:45 PM)
Aplikacija iskljucena        (10/25/2015 6:17:39 PM)
Aplikacija ukljucena        (10/25/2015 6:17:58 PM)
Aplikacija iskljucena        (10/25/2015 6:18:06 PM)
Aplikacija ukljucena        (10/25/2015 6:24:06 PM)
Aplikacija iskljucena        (10/25/2015 6:25:35 PM)
Aplikacija ukljucena        (10/25/2015 6:26:42 PM)
Aplikacija iskljucena        (10/25/2015 6:27:01 PM)
Aplikacija ukljucena        (10/25/2015 6:27:09 PM)
Aplikacija iskljucena        (10/25/2015 6:27:20 PM)
Aplikacija ukljucena        (10/25/2015 6:28:09 PM)
Aplikacija iskljucena        (10/25/2015 6:28:57 PM)
Aplikacija ukljucena        (10/25/2015 6:30:52 PM)
Aplikacija iskljucena        (10/25/2015 6:32:23 PM)
Aplikacija ukljucena        (10/25/2015 6:35:28 PM)
Aplikacija iskljucena        (10/25/2015 6:35:49 PM)
Aplikacija ukljucena        (10/25/2015 6:47:35 PM)
Aplikacija iskljucena        (10/25/2015 6:48:24 PM)
Aplikacija ukljucena        (10/25/2015 6:48:35 PM)
Aplikacija iskljucena        (10/25/2015 6:48:43 PM)
Aplikacija ukljucena        (10/25/2015 6:50:47 PM)
Aplikacija iskljucena        (10/25/2015 6:51:31 PM)
Aplikacija ukljucena        (27-Oct-15 9:01:11 AM)
Aplikacija iskljucena        (27-Oct-15 9:03:08 AM)
Aplikacija ukljucena        (27-Oct-15 9:03:24 AM)
Aplikacija iskljucena        (27-Oct-15 9:03:30 AM)
Aplikacija ukljucena        (27-Oct-15 9:11:10 AM)
Aplikacija iskljucena        (27-Oct-15 9:19:41 AM)
Aplikacija ukljucena        (27-Oct-15 9:20:26 AM)
Aplikacija iskljucena        (27-Oct-15 9:20:33 AM)
Aplikacija ukljucena        (27-Oct-15 9:26:47 AM)
Aplikacija iskljucena        (27-Oct-15 9:27:41 AM)
Aplikacija ukljucena        (27-Oct-15 9:28:23 AM)
Aplikacija iskljucena        (27-Oct-15 9:28:36 AM)
Aplikacija ukljucena        (27-Oct-15 9:28:47 AM)
Aplikacija iskljucena        (27-Oct-15 9:29:04 AM)
Aplikacija ukljucena        (27-Oct-15 9:29:21 AM)
Aplikacija iskljucena        (27-Oct-15 9:29:33 AM)
Aplikacija ukljucena        (27-Oct-15 9:29:45 AM)
Aplikacija iskljucena        (27-Oct-15 9:29:58 AM)
Aplikacija ukljucena        (27-Oct-15 9:30:10 AM)
Aplikacija iskljucena        (27-Oct-15 9:30:28 AM)
Aplikacija ukljucena        (27-Oct-15 9:30:39 AM)
Aplikacija iskljucena        (27-Oct-15 9:30:57 AM)
Aplikacija ukljucena        (27-Oct-15 9:31:08 AM)
Aplikacija iskljucena        (27-Oct-15 9:32:18 AM)
Aplikacija ukljucena        (27-Oct-15 9:33:46 AM)
Aplikacija iskljucena        (27-Oct-15 9:34:17 AM)
Aplikacija ukljucena        (27-Oct-15 9:36:17 AM)
Aplikacija iskljucena        (27-Oct-15 9:36:41 AM)
Aplikacija ukljucena        (27-Oct-15 9:37:26 AM)
Aplikacija iskljucena        (27-Oct-15 9:42:37 AM)
Aplikacija ukljucena        (27-Oct-15 9:46:08 AM)
Aplikacija iskljucena        (27-Oct-15 9:47:05 AM)
Aplikacija ukljucena        (27-Oct-15 9:48:34 AM)
Aplikacija iskljucena        (27-Oct-15 9:56:45 AM)
Aplikacija ukljucena        (27-Oct-15 9:58:02 AM)
Aplikacija ukljucena        (27-Oct-15 10:17:42 AM)
Aplikacija ukljucena        (27-Oct-15 10:17:52 AM)
Aplikacija iskljucena        (27-Oct-15 10:18:11 AM)
Aplikacija iskljucena        (27-Oct-15 10:18:18 AM)
Aplikacija ukljucena        (27-Oct-15 10:21:39 AM)
Aplikacija ukljucena        (27-Oct-15 10:31:12 AM)
Aplikacija ukljucena        (27-Oct-15 10:35:03 AM)
Aplikacija iskljucena        (27-Oct-15 10:35:24 AM)
Aplikacija ukljucena        (27-Oct-15 10:43:21 AM)
Aplikacija iskljucena        (27-Oct-15 10:44:04 AM)
Aplikacija ukljucena        (27-Oct-15 10:44:06 AM)
Aplikacija ukljucena        (27-Oct-15 10:45:05 AM)
Aplikacija ukljucena        (27-Oct-15 10:46:04 AM)
Aplikacija iskljucena        (27-Oct-15 10:46:34 AM)
Aplikacija ukljucena        (27-Oct-15 10:46:37 AM)
Aplikacija ukljucena        (27-Oct-15 10:47:12 AM)
Aplikacija ukljucena        (27-Oct-15 10:49:13 AM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (27-Oct-15 10:49:19 AM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (27-Oct-15 10:49:20 AM)
Aplikacija iskljucena        (27-Oct-15 10:49:27 AM)
Aplikacija ukljucena        (27-Oct-15 10:49:31 AM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (27-Oct-15 10:49:34 AM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (27-Oct-15 10:49:35 AM)
Aplikacija iskljucena        (27-Oct-15 10:49:40 AM)
Aplikacija ukljucena        (27-Oct-15 10:49:51 AM)
Aplikacija ukljucena        (27-Oct-15 10:50:30 AM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (27-Oct-15 10:50:33 AM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (27-Oct-15 10:50:34 AM)
Aplikacija iskljucena        (27-Oct-15 10:50:36 AM)
Aplikacija ukljucena        (27-Oct-15 10:50:42 AM)
Aplikacija ukljucena        (27-Oct-15 10:52:16 AM)
Aplikacija ukljucena        (27-Oct-15 10:53:14 AM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (27-Oct-15 10:53:30 AM)
Aplikacija ukljucena        (27-Oct-15 10:54:31 AM)
Aplikacija iskljucena        (27-Oct-15 10:54:36 AM)
Aplikacija ukljucena        (27-Oct-15 10:54:45 AM)
Aplikacija iskljucena        (27-Oct-15 10:55:30 AM)
Aplikacija ukljucena        (27-Oct-15 10:56:09 AM)
Sequence contains no elements  {drawFittingGraphic()}        (27-Oct-15 11:08:37 AM)
Height must be non-negative.  {drawFittingGraphic()}        (27-Oct-15 11:26:01 AM)
Aplikacija ukljucena        (27-Oct-15 11:28:13 AM)
Aplikacija iskljucena        (27-Oct-15 11:37:54 AM)
Aplikacija ukljucena        (27-Oct-15 11:38:30 AM)
Height must be non-negative.  {drawFittingGraphic()}        (27-Oct-15 11:40:35 AM)
Aplikacija ukljucena        (27-Oct-15 11:42:56 AM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 11:44:10 AM)
Aplikacija ukljucena        (27-Oct-15 11:47:18 AM)
Aplikacija ukljucena        (27-Oct-15 11:50:24 AM)
Aplikacija ukljucena        (27-Oct-15 11:52:22 AM)
Height must be non-negative.  {drawFittingGraphic()}        (27-Oct-15 11:54:59 AM)
Aplikacija ukljucena        (27-Oct-15 11:57:38 AM)
Aplikacija ukljucena        (27-Oct-15 11:57:57 AM)
Aplikacija ukljucena        (27-Oct-15 12:00:32 PM)
Aplikacija ukljucena        (27-Oct-15 12:03:00 PM)
Aplikacija iskljucena        (27-Oct-15 12:07:28 PM)
Aplikacija ukljucena        (27-Oct-15 12:12:36 PM)
Aplikacija ukljucena        (27-Oct-15 12:25:33 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 12:27:49 PM)
Sequence contains no elements  {drawFittingGraphic()}        (27-Oct-15 12:27:51 PM)
Sequence contains no elements  {drawFittingGraphic()}        (27-Oct-15 12:27:52 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 12:33:05 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 12:33:05 PM)
Aplikacija iskljucena        (27-Oct-15 12:35:50 PM)
Aplikacija ukljucena        (27-Oct-15 12:42:27 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 12:42:28 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 12:42:28 PM)
Sequence contains no elements  {drawFittingGraphic()}        (27-Oct-15 12:45:41 PM)
Aplikacija ukljucena        (27-Oct-15 12:50:00 PM)
Aplikacija iskljucena        (27-Oct-15 12:53:35 PM)
Aplikacija ukljucena        (27-Oct-15 12:53:38 PM)
Aplikacija iskljucena        (27-Oct-15 12:54:48 PM)
Aplikacija ukljucena        (27-Oct-15 12:57:15 PM)
Sequence contains no elements  {drawFittingGraphic()}        (27-Oct-15 1:00:30 PM)
Sequence contains no elements  {drawFittingGraphic()}        (27-Oct-15 1:00:30 PM)
Sequence contains no elements  {drawFittingGraphic()}        (27-Oct-15 1:00:31 PM)
Sequence contains no elements  {drawFittingGraphic()}        (27-Oct-15 1:00:32 PM)
Sequence contains no elements  {drawFittingGraphic()}        (27-Oct-15 1:00:32 PM)
Aplikacija iskljucena        (27-Oct-15 1:02:04 PM)
Aplikacija ukljucena        (27-Oct-15 1:02:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 1:02:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 1:02:08 PM)
Aplikacija iskljucena        (27-Oct-15 1:02:19 PM)
Aplikacija ukljucena        (27-Oct-15 1:02:29 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 1:02:32 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 1:02:32 PM)
Height must be non-negative.  {drawFittingGraphic()}        (27-Oct-15 1:06:03 PM)
Aplikacija ukljucena        (27-Oct-15 1:06:43 PM)
Aplikacija ukljucena        (27-Oct-15 1:07:06 PM)
Aplikacija ukljucena        (27-Oct-15 1:07:15 PM)
Aplikacija iskljucena        (27-Oct-15 1:08:08 PM)
Aplikacija ukljucena        (27-Oct-15 1:12:21 PM)
Aplikacija ukljucena        (27-Oct-15 1:13:12 PM)
Aplikacija ukljucena        (27-Oct-15 1:13:50 PM)
Aplikacija ukljucena        (27-Oct-15 1:14:01 PM)
Aplikacija ukljucena        (27-Oct-15 1:15:37 PM)
Aplikacija ukljucena        (27-Oct-15 1:16:24 PM)
Aplikacija iskljucena        (27-Oct-15 1:17:09 PM)
Aplikacija ukljucena        (27-Oct-15 1:18:32 PM)
Aplikacija ukljucena        (27-Oct-15 1:19:52 PM)
Aplikacija iskljucena        (27-Oct-15 1:20:24 PM)
Aplikacija ukljucena        (27-Oct-15 1:22:33 PM)
Aplikacija iskljucena        (27-Oct-15 1:23:11 PM)
Aplikacija ukljucena        (27-Oct-15 1:27:30 PM)
Aplikacija ukljucena        (27-Oct-15 1:29:14 PM)
Aplikacija ukljucena        (27-Oct-15 1:29:49 PM)
Aplikacija ukljucena        (27-Oct-15 1:30:45 PM)
Aplikacija ukljucena        (27-Oct-15 1:32:27 PM)
Aplikacija ukljucena        (27-Oct-15 1:33:41 PM)
Aplikacija iskljucena        (27-Oct-15 1:34:49 PM)
Aplikacija ukljucena        (27-Oct-15 1:36:16 PM)
Aplikacija ukljucena        (27-Oct-15 1:37:38 PM)
Aplikacija ukljucena        (27-Oct-15 1:38:21 PM)
Height must be non-negative.  {drawFittingGraphic()}        (27-Oct-15 1:39:30 PM)
Aplikacija iskljucena        (27-Oct-15 1:39:36 PM)
Aplikacija ukljucena        (27-Oct-15 1:40:24 PM)
Aplikacija iskljucena        (27-Oct-15 1:40:50 PM)
Aplikacija ukljucena        (27-Oct-15 1:43:13 PM)
Aplikacija ukljucena        (27-Oct-15 1:45:43 PM)
Aplikacija iskljucena        (27-Oct-15 1:46:50 PM)
Aplikacija ukljucena        (27-Oct-15 1:50:23 PM)
Aplikacija iskljucena        (27-Oct-15 1:52:04 PM)
Aplikacija ukljucena        (27-Oct-15 1:53:54 PM)
Aplikacija iskljucena        (27-Oct-15 1:55:12 PM)
Aplikacija ukljucena        (27-Oct-15 1:56:14 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 2:02:05 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 2:02:06 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 2:02:06 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 2:02:06 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 2:02:06 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 2:03:13 PM)
Aplikacija iskljucena        (27-Oct-15 2:11:32 PM)
Aplikacija ukljucena        (27-Oct-15 2:11:59 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 2:12:22 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 2:12:22 PM)
Aplikacija iskljucena        (27-Oct-15 2:12:26 PM)
Aplikacija ukljucena        (27-Oct-15 2:15:22 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 2:15:26 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (27-Oct-15 2:15:26 PM)
Aplikacija iskljucena        (27-Oct-15 2:24:25 PM)
Aplikacija ukljucena        (27-Oct-15 3:24:08 PM)
Aplikacija iskljucena        (27-Oct-15 3:24:56 PM)
Aplikacija ukljucena        (27-Oct-15 3:29:47 PM)
Aplikacija iskljucena        (27-Oct-15 3:29:50 PM)
Aplikacija ukljucena        (28-Oct-15 3:59:09 PM)
Aplikacija ukljucena        (28-Oct-15 4:14:47 PM)
Sequence contains no elements  {drawFittingGraphic()}        (28-Oct-15 4:27:05 PM)
Aplikacija iskljucena        (28-Oct-15 4:27:12 PM)
Aplikacija ukljucena        (28-Oct-15 4:27:22 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 4:27:22 PM)
Aplikacija iskljucena        (28-Oct-15 4:36:16 PM)
Aplikacija ukljucena        (28-Oct-15 4:36:18 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 4:36:19 PM)
Aplikacija iskljucena        (28-Oct-15 4:37:14 PM)
Aplikacija ukljucena        (28-Oct-15 4:37:17 PM)
Aplikacija iskljucena        (28-Oct-15 4:38:21 PM)
Aplikacija ukljucena        (28-Oct-15 4:40:23 PM)
Sequence contains no elements  {drawFittingGraphic()}        (28-Oct-15 4:43:02 PM)
Sequence contains no elements  {drawFittingGraphic()}        (28-Oct-15 4:43:03 PM)
Aplikacija iskljucena        (28-Oct-15 4:43:09 PM)
Aplikacija ukljucena        (28-Oct-15 4:45:01 PM)
Aplikacija iskljucena        (28-Oct-15 4:46:14 PM)
Aplikacija ukljucena        (28-Oct-15 5:10:07 PM)
Aplikacija iskljucena        (28-Oct-15 5:12:18 PM)
Aplikacija ukljucena        (28-Oct-15 5:16:49 PM)
Aplikacija iskljucena        (28-Oct-15 5:19:09 PM)
Aplikacija ukljucena        (28-Oct-15 5:19:11 PM)
Aplikacija iskljucena        (28-Oct-15 5:20:04 PM)
Aplikacija ukljucena        (28-Oct-15 5:20:07 PM)
Aplikacija iskljucena        (28-Oct-15 5:20:40 PM)
Aplikacija ukljucena        (28-Oct-15 5:21:08 PM)
Aplikacija iskljucena        (28-Oct-15 5:22:33 PM)
Aplikacija ukljucena        (28-Oct-15 5:22:36 PM)
Aplikacija iskljucena        (28-Oct-15 5:22:55 PM)
Aplikacija ukljucena        (28-Oct-15 5:22:58 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 5:22:59 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 5:23:19 PM)
Aplikacija iskljucena        (28-Oct-15 5:23:50 PM)
Aplikacija ukljucena        (28-Oct-15 5:23:52 PM)
Aplikacija iskljucena        (28-Oct-15 5:24:11 PM)
Aplikacija ukljucena        (28-Oct-15 5:25:42 PM)
Aplikacija ukljucena        (28-Oct-15 5:28:05 PM)
Aplikacija iskljucena        (28-Oct-15 5:29:23 PM)
Aplikacija ukljucena        (28-Oct-15 5:29:35 PM)
Aplikacija iskljucena        (28-Oct-15 5:33:46 PM)
Aplikacija ukljucena        (28-Oct-15 5:35:35 PM)
Aplikacija iskljucena        (28-Oct-15 5:36:17 PM)
Aplikacija ukljucena        (28-Oct-15 5:36:30 PM)
Aplikacija iskljucena        (28-Oct-15 5:48:08 PM)
Aplikacija ukljucena        (28-Oct-15 5:48:10 PM)
Aplikacija ukljucena        (28-Oct-15 5:53:00 PM)
Aplikacija iskljucena        (28-Oct-15 5:57:10 PM)
Aplikacija ukljucena        (28-Oct-15 5:57:25 PM)
Aplikacija iskljucena        (28-Oct-15 5:57:30 PM)
Aplikacija ukljucena        (28-Oct-15 6:04:38 PM)
Aplikacija ukljucena        (28-Oct-15 6:07:04 PM)
Aplikacija ukljucena        (28-Oct-15 6:10:32 PM)
Aplikacija ukljucena        (28-Oct-15 6:12:30 PM)
Aplikacija iskljucena        (28-Oct-15 6:12:39 PM)
Aplikacija ukljucena        (28-Oct-15 6:13:01 PM)
Aplikacija ukljucena        (28-Oct-15 6:14:26 PM)
Aplikacija iskljucena        (28-Oct-15 6:14:36 PM)
Aplikacija ukljucena        (28-Oct-15 6:18:19 PM)
Aplikacija iskljucena        (28-Oct-15 6:18:37 PM)
Aplikacija ukljucena        (28-Oct-15 6:19:28 PM)
Aplikacija iskljucena        (28-Oct-15 6:19:41 PM)
Aplikacija ukljucena        (28-Oct-15 6:25:17 PM)
Aplikacija iskljucena        (28-Oct-15 6:26:43 PM)
Aplikacija ukljucena        (28-Oct-15 6:29:06 PM)
Aplikacija iskljucena        (28-Oct-15 6:29:53 PM)
Aplikacija ukljucena        (28-Oct-15 6:39:54 PM)
Aplikacija iskljucena        (28-Oct-15 6:40:17 PM)
Aplikacija ukljucena        (28-Oct-15 6:40:19 PM)
Aplikacija iskljucena        (28-Oct-15 6:40:34 PM)
Aplikacija ukljucena        (28-Oct-15 6:40:36 PM)
Aplikacija iskljucena        (28-Oct-15 6:40:50 PM)
Aplikacija ukljucena        (28-Oct-15 6:40:53 PM)
Aplikacija iskljucena        (28-Oct-15 6:41:04 PM)
Aplikacija ukljucena        (28-Oct-15 6:41:59 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 6:44:27 PM)
Aplikacija ukljucena        (28-Oct-15 6:53:28 PM)
Aplikacija iskljucena        (28-Oct-15 6:53:57 PM)
Aplikacija ukljucena        (28-Oct-15 6:54:02 PM)
Aplikacija iskljucena        (28-Oct-15 6:54:24 PM)
Aplikacija ukljucena        (28-Oct-15 6:54:39 PM)
Aplikacija ukljucena        (28-Oct-15 6:57:00 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:00:49 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:00:55 PM)
Aplikacija iskljucena        (28-Oct-15 7:01:23 PM)
Aplikacija ukljucena        (28-Oct-15 7:01:33 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:01:34 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:01:35 PM)
Aplikacija ukljucena        (28-Oct-15 7:05:27 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:05:28 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:05:28 PM)
Aplikacija ukljucena        (28-Oct-15 7:11:02 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:11:03 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:11:03 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:11:51 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:14:01 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:14:01 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:14:18 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:14:23 PM)
Aplikacija iskljucena        (28-Oct-15 7:22:06 PM)
Aplikacija ukljucena        (28-Oct-15 7:23:57 PM)
Sequence contains no elements  {drawFittingGraphic()}        (28-Oct-15 7:25:15 PM)
Sequence contains no elements  {drawFittingGraphic()}        (28-Oct-15 7:25:17 PM)
Sequence contains no elements  {drawFittingGraphic()}        (28-Oct-15 7:26:28 PM)
Sequence contains no elements  {drawFittingGraphic()}        (28-Oct-15 7:26:33 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:31:20 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:31:20 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:31:20 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:31:21 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:31:21 PM)
Aplikacija iskljucena        (28-Oct-15 7:35:00 PM)
Aplikacija ukljucena        (28-Oct-15 7:36:35 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:36:37 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:36:37 PM)
Aplikacija iskljucena        (28-Oct-15 7:38:08 PM)
Aplikacija ukljucena        (28-Oct-15 7:39:44 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:39:45 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:39:45 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:39:56 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:39:56 PM)
Aplikacija iskljucena        (28-Oct-15 7:45:11 PM)
Aplikacija ukljucena        (28-Oct-15 7:45:39 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:48:56 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:48:56 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:48:56 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:48:57 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (28-Oct-15 7:48:57 PM)
Aplikacija iskljucena        (28-Oct-15 7:51:24 PM)
Aplikacija ukljucena        (29-Oct-15 5:21:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:21:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:21:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:21:27 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:21:32 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:21:41 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:21:54 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:22:05 PM)
Aplikacija iskljucena        (29-Oct-15 5:22:07 PM)
Aplikacija ukljucena        (29-Oct-15 5:23:48 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:23:49 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:23:49 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:27:40 PM)
Aplikacija iskljucena        (29-Oct-15 5:28:21 PM)
Aplikacija ukljucena        (29-Oct-15 5:29:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:29:12 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:29:13 PM)
Aplikacija iskljucena        (29-Oct-15 5:29:59 PM)
Aplikacija ukljucena        (29-Oct-15 5:33:20 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:33:24 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:33:31 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:33:44 PM)
Aplikacija iskljucena        (29-Oct-15 5:34:00 PM)
Aplikacija ukljucena        (29-Oct-15 5:34:09 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:34:13 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:34:16 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:34:25 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:34:40 PM)
Aplikacija iskljucena        (29-Oct-15 5:34:44 PM)
Aplikacija ukljucena        (29-Oct-15 5:35:23 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:35:46 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:35:51 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:36:00 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:36:07 PM)
Aplikacija iskljucena        (29-Oct-15 5:36:19 PM)
Aplikacija ukljucena        (29-Oct-15 5:37:18 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:37:28 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:37:32 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:37:54 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:38:11 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:39:28 PM)
Aplikacija iskljucena        (29-Oct-15 5:40:03 PM)
Aplikacija ukljucena        (29-Oct-15 5:40:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:40:10 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:40:15 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:41:07 PM)
Aplikacija iskljucena        (29-Oct-15 5:41:39 PM)
Aplikacija ukljucena        (29-Oct-15 5:42:11 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:42:18 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:42:21 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:42:42 PM)
Aplikacija iskljucena        (29-Oct-15 5:42:50 PM)
Aplikacija ukljucena        (29-Oct-15 5:43:01 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:43:10 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:43:14 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:43:40 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:44:26 PM)
Aplikacija ukljucena        (29-Oct-15 5:45:53 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:46:01 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:46:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:47:13 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:47:21 PM)
Aplikacija iskljucena        (29-Oct-15 5:47:31 PM)
Aplikacija ukljucena        (29-Oct-15 5:47:36 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:47:37 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:47:38 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:47:44 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:47:51 PM)
Aplikacija iskljucena        (29-Oct-15 5:47:53 PM)
Aplikacija ukljucena        (29-Oct-15 5:47:55 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:47:56 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:47:56 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:48:04 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:48:13 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:48:15 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:48:16 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:48:17 PM)
Aplikacija iskljucena        (29-Oct-15 5:48:29 PM)
Aplikacija ukljucena        (29-Oct-15 5:48:31 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:48:32 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:48:32 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:48:39 PM)
Aplikacija iskljucena        (29-Oct-15 5:48:51 PM)
Aplikacija ukljucena        (29-Oct-15 5:48:54 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:48:55 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:48:55 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:49:10 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:49:15 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:49:24 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:49:37 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:49:44 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:49:46 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:49:47 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:49:50 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:49:51 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:49:51 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:49:52 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:49:52 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:49:53 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:49:53 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:50:05 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:50:12 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:50:14 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:50:24 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:50:29 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:50:34 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:50:36 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:50:39 PM)
Aplikacija iskljucena        (29-Oct-15 5:50:59 PM)
Aplikacija ukljucena        (29-Oct-15 5:51:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:51:10 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:51:10 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:51:15 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:51:19 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:51:22 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:51:24 PM)
Aplikacija iskljucena        (29-Oct-15 5:51:27 PM)
Aplikacija ukljucena        (29-Oct-15 5:51:35 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:51:36 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:51:36 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:51:45 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:51:48 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:51:57 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:52:00 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:52:31 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:52:40 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:52:47 PM)
Aplikacija iskljucena        (29-Oct-15 5:53:30 PM)
Aplikacija ukljucena        (29-Oct-15 5:54:22 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:54:23 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:54:24 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:54:41 PM)
Aplikacija iskljucena        (29-Oct-15 5:55:06 PM)
Aplikacija ukljucena        (29-Oct-15 5:56:02 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:56:12 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:56:14 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:57:18 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:57:30 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:57:35 PM)
Aplikacija ukljucena        (29-Oct-15 5:59:23 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:59:28 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 5:59:58 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:00:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:00:13 PM)
Aplikacija iskljucena        (29-Oct-15 6:01:51 PM)
Aplikacija ukljucena        (29-Oct-15 6:02:02 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:02:06 PM)
Aplikacija iskljucena        (29-Oct-15 6:02:27 PM)
Aplikacija ukljucena        (29-Oct-15 6:02:36 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:02:41 PM)
Aplikacija iskljucena        (29-Oct-15 6:02:51 PM)
Aplikacija ukljucena        (29-Oct-15 6:03:47 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:03:57 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:04:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:05:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:05:19 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:05:25 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:05:31 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:05:35 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:06:51 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:07:20 PM)
Aplikacija iskljucena        (29-Oct-15 6:07:35 PM)
Aplikacija ukljucena        (29-Oct-15 6:08:08 PM)
Aplikacija ukljucena        (29-Oct-15 6:08:24 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:08:25 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:08:26 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:08:30 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:08:34 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:08:36 PM)
Aplikacija iskljucena        (29-Oct-15 6:08:44 PM)
Aplikacija ukljucena        (29-Oct-15 6:08:57 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:08:59 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:08:59 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:09:13 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:09:15 PM)
Aplikacija iskljucena        (29-Oct-15 6:09:16 PM)
Aplikacija ukljucena        (29-Oct-15 6:10:05 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:10:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:10:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:10:12 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:10:14 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:10:16 PM)
Aplikacija iskljucena        (29-Oct-15 6:10:17 PM)
Aplikacija ukljucena        (29-Oct-15 6:10:35 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:10:36 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:10:36 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:10:42 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:10:45 PM)
Aplikacija iskljucena        (29-Oct-15 6:10:56 PM)
Aplikacija ukljucena        (29-Oct-15 6:11:11 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:11:13 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:11:20 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:11:27 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:11:44 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:11:58 PM)
Aplikacija iskljucena        (29-Oct-15 6:12:17 PM)
Aplikacija ukljucena        (29-Oct-15 6:13:18 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:13:19 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:13:19 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:13:23 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:13:26 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:13:28 PM)
Aplikacija iskljucena        (29-Oct-15 6:13:30 PM)
Aplikacija ukljucena        (29-Oct-15 6:13:49 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:13:50 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:13:51 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:14:02 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:14:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:14:10 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:14:12 PM)
Aplikacija iskljucena        (29-Oct-15 6:14:17 PM)
Aplikacija ukljucena        (29-Oct-15 6:14:23 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:14:24 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:14:25 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:14:48 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:14:58 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:15:00 PM)
Aplikacija iskljucena        (29-Oct-15 6:15:24 PM)
Aplikacija ukljucena        (29-Oct-15 6:15:42 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:15:43 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:15:43 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:16:02 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:16:05 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:16:07 PM)
Aplikacija iskljucena        (29-Oct-15 6:16:08 PM)
Aplikacija ukljucena        (29-Oct-15 6:16:55 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:16:56 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:16:56 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:19:04 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:19:05 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (29-Oct-15 6:22:42 PM)
Sequence contains no elements  {drawFittingGraphic()}        (29-Oct-15 6:26:25 PM)
Sequence contains no elements  {drawFittingGraphic()}        (29-Oct-15 6:26:27 PM)
Sequence contains no elements  {drawFittingGraphic()}        (29-Oct-15 6:26:28 PM)
Aplikacija iskljucena        (29-Oct-15 6:31:03 PM)
Aplikacija ukljucena        (29-Oct-15 6:31:59 PM)
Aplikacija iskljucena        (29-Oct-15 6:38:04 PM)
Aplikacija ukljucena        (29-Oct-15 6:38:17 PM)
Aplikacija iskljucena        (29-Oct-15 6:38:58 PM)
Aplikacija ukljucena        (29-Oct-15 6:41:29 PM)
Aplikacija iskljucena        (29-Oct-15 6:41:36 PM)
Aplikacija ukljucena        (29-Oct-15 6:41:58 PM)
Aplikacija iskljucena        (29-Oct-15 7:03:40 PM)
Aplikacija ukljucena        (10/31/2015 1:48:29 PM)
Aplikacija iskljucena        (10/31/2015 1:48:39 PM)
Aplikacija ukljucena        (10/31/2015 1:49:19 PM)
Aplikacija ukljucena        (10/31/2015 1:53:44 PM)
Aplikacija iskljucena        (10/31/2015 2:13:58 PM)
Aplikacija ukljucena        (10/31/2015 2:32:58 PM)
Aplikacija iskljucena        (10/31/2015 2:34:06 PM)
Aplikacija ukljucena        (10/31/2015 2:34:16 PM)
Aplikacija iskljucena        (10/31/2015 2:35:40 PM)
Aplikacija ukljucena        (10/31/2015 2:36:21 PM)
Aplikacija iskljucena        (10/31/2015 2:36:59 PM)
Aplikacija ukljucena        (10/31/2015 2:37:45 PM)
Aplikacija iskljucena        (10/31/2015 2:40:01 PM)
Aplikacija ukljucena        (10/31/2015 2:40:04 PM)
Aplikacija iskljucena        (10/31/2015 2:40:12 PM)
Aplikacija ukljucena        (31-Oct-15 5:13:12 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (31-Oct-15 5:13:13 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (31-Oct-15 5:13:13 PM)
Aplikacija iskljucena        (31-Oct-15 5:21:23 PM)
Aplikacija ukljucena        (31-Oct-15 5:21:26 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (31-Oct-15 5:21:47 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (31-Oct-15 5:21:47 PM)
Aplikacija iskljucena        (31-Oct-15 5:21:51 PM)
Aplikacija ukljucena        (31-Oct-15 5:24:32 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (31-Oct-15 5:24:35 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (31-Oct-15 5:24:35 PM)
Sequence contains no elements  {drawFittingGraphic()}        (31-Oct-15 5:26:55 PM)
Sequence contains no elements  {drawFittingGraphic()}        (31-Oct-15 5:26:56 PM)
Sequence contains no elements  {drawFittingGraphic()}        (31-Oct-15 5:26:57 PM)
Aplikacija iskljucena        (31-Oct-15 5:31:52 PM)
Aplikacija ukljucena        (31-Oct-15 5:33:50 PM)
Aplikacija iskljucena        (31-Oct-15 5:34:17 PM)
Aplikacija ukljucena        (31-Oct-15 5:34:29 PM)
Aplikacija iskljucena        (31-Oct-15 5:34:54 PM)
Aplikacija ukljucena        (31-Oct-15 5:37:13 PM)
Aplikacija iskljucena        (31-Oct-15 5:57:39 PM)
Aplikacija ukljucena        (31-Oct-15 6:00:44 PM)
Aplikacija iskljucena        (31-Oct-15 6:03:19 PM)
Aplikacija ukljucena        (31-Oct-15 6:06:01 PM)
Aplikacija iskljucena        (31-Oct-15 6:15:27 PM)
Aplikacija ukljucena        (31-Oct-15 6:15:31 PM)
Aplikacija iskljucena        (31-Oct-15 6:16:11 PM)
Aplikacija ukljucena        (31-Oct-15 6:17:11 PM)
Aplikacija ukljucena        (31-Oct-15 6:25:53 PM)
Aplikacija iskljucena        (31-Oct-15 6:26:10 PM)
Aplikacija ukljucena        (31-Oct-15 6:26:13 PM)
Aplikacija ukljucena        (31-Oct-15 6:29:36 PM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (31-Oct-15 6:39:12 PM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (31-Oct-15 6:39:22 PM)
Aplikacija iskljucena        (31-Oct-15 6:44:28 PM)
Aplikacija ukljucena        (31-Oct-15 6:46:10 PM)
Aplikacija iskljucena        (31-Oct-15 6:47:25 PM)
Aplikacija ukljucena        (31-Oct-15 6:49:01 PM)
Aplikacija iskljucena        (31-Oct-15 6:49:23 PM)
Aplikacija ukljucena        (31-Oct-15 6:49:31 PM)
Aplikacija iskljucena        (31-Oct-15 6:50:23 PM)
Aplikacija ukljucena        (31-Oct-15 6:51:05 PM)
Aplikacija iskljucena        (31-Oct-15 6:51:33 PM)
Aplikacija ukljucena        (31-Oct-15 6:52:06 PM)
Aplikacija iskljucena        (31-Oct-15 6:54:12 PM)
Aplikacija ukljucena        (31-Oct-15 6:56:15 PM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (31-Oct-15 6:57:49 PM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (31-Oct-15 6:57:54 PM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (31-Oct-15 6:57:55 PM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (31-Oct-15 6:58:07 PM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (31-Oct-15 6:58:12 PM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (31-Oct-15 6:58:16 PM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (31-Oct-15 6:58:30 PM)
Sequence contains no elements  {drawFittingGraphic()}        (31-Oct-15 7:00:09 PM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (31-Oct-15 7:02:05 PM)
Sequence contains no elements  {drawFittingGraphic()}        (31-Oct-15 7:02:39 PM)
Sequence contains no elements  {drawFittingGraphic()}        (31-Oct-15 7:02:46 PM)
Sequence contains no elements  {drawFittingGraphic()}        (31-Oct-15 7:05:39 PM)
Aplikacija iskljucena        (31-Oct-15 7:07:07 PM)
Aplikacija ukljucena        (31-Oct-15 7:07:10 PM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (31-Oct-15 7:07:12 PM)
Object reference not set to an instance of an object.  {drawFittingGraphic()}        (31-Oct-15 7:07:12 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (31-Oct-15 7:08:47 PM)
Aplikacija iskljucena        (31-Oct-15 7:12:26 PM)
Aplikacija ukljucena        (31-Oct-15 7:12:34 PM)
Aplikacija iskljucena        (31-Oct-15 7:15:09 PM)
