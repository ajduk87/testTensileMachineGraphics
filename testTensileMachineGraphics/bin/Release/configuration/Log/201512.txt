Aplikacija ukljucena        (12/26/2015 1:02:52 PM)
Aplikacija iskljucena        (12/26/2015 1:05:24 PM)
Aplikacija ukljucena        (12/26/2015 1:06:23 PM)
Aplikacija iskljucena        (12/26/2015 1:09:19 PM)
Aplikacija ukljucena        (12/26/2015 1:16:14 PM)
Aplikacija iskljucena        (12/26/2015 1:16:37 PM)
Aplikacija ukljucena        (12/26/2015 1:17:33 PM)
Aplikacija iskljucena        (12/26/2015 1:18:01 PM)
Aplikacija ukljucena        (12/26/2015 1:20:11 PM)
Aplikacija iskljucena        (12/26/2015 1:20:31 PM)
Aplikacija ukljucena        (12/26/2015 1:21:30 PM)
Aplikacija iskljucena        (12/26/2015 1:21:42 PM)
Aplikacija ukljucena        (12/26/2015 1:22:39 PM)
Aplikacija iskljucena        (12/26/2015 1:23:02 PM)
Aplikacija ukljucena        (12/26/2015 1:24:27 PM)
Aplikacija iskljucena        (12/26/2015 1:24:56 PM)
Aplikacija ukljucena        (12/26/2015 1:25:25 PM)
Aplikacija iskljucena        (12/26/2015 1:26:11 PM)
Aplikacija ukljucena        (12/26/2015 1:26:16 PM)
Aplikacija iskljucena        (12/26/2015 1:26:35 PM)
Aplikacija ukljucena        (12/26/2015 1:28:58 PM)
Aplikacija iskljucena        (12/26/2015 1:29:13 PM)
Aplikacija ukljucena        (12/26/2015 1:29:43 PM)
Aplikacija iskljucena        (12/26/2015 1:30:10 PM)
Aplikacija ukljucena        (12/26/2015 1:33:10 PM)
Aplikacija iskljucena        (12/26/2015 1:34:01 PM)
Aplikacija ukljucena        (12/26/2015 1:35:54 PM)
Aplikacija iskljucena        (12/26/2015 1:36:15 PM)
Aplikacija ukljucena        (12/26/2015 1:37:08 PM)
Aplikacija iskljucena        (12/26/2015 1:37:28 PM)
Aplikacija ukljucena        (12/26/2015 1:39:13 PM)
Aplikacija iskljucena        (12/26/2015 1:39:41 PM)
Aplikacija ukljucena        (12/26/2015 1:40:48 PM)
Aplikacija iskljucena        (12/26/2015 1:41:13 PM)
Aplikacija ukljucena        (12/26/2015 1:41:35 PM)
Aplikacija iskljucena        (12/26/2015 1:41:55 PM)
Aplikacija ukljucena        (12/26/2015 1:42:48 PM)
Aplikacija iskljucena        (12/26/2015 1:43:27 PM)
Aplikacija ukljucena        (12/26/2015 1:44:03 PM)
Aplikacija iskljucena        (12/26/2015 1:44:26 PM)
Aplikacija ukljucena        (12/26/2015 1:45:00 PM)
Aplikacija iskljucena        (12/26/2015 1:45:14 PM)
Aplikacija ukljucena        (12/26/2015 1:45:41 PM)
Aplikacija iskljucena        (12/26/2015 1:45:53 PM)
Aplikacija ukljucena        (12/26/2015 1:48:35 PM)
Aplikacija iskljucena        (12/26/2015 1:49:18 PM)
Aplikacija ukljucena        (12/26/2015 1:51:26 PM)
Aplikacija iskljucena        (12/26/2015 1:51:46 PM)
Aplikacija ukljucena        (12/26/2015 1:52:58 PM)
Aplikacija iskljucena        (12/26/2015 1:53:08 PM)
Aplikacija ukljucena        (12/26/2015 1:54:16 PM)
Aplikacija iskljucena        (12/26/2015 1:54:29 PM)
Aplikacija ukljucena        (12/26/2015 1:55:36 PM)
Aplikacija iskljucena        (12/26/2015 1:55:58 PM)
Aplikacija ukljucena        (12/26/2015 1:57:10 PM)
Aplikacija iskljucena        (12/26/2015 1:58:06 PM)
Aplikacija ukljucena        (12/26/2015 1:58:53 PM)
Aplikacija iskljucena        (12/26/2015 1:59:07 PM)
Aplikacija ukljucena        (12/26/2015 1:59:35 PM)
Aplikacija iskljucena        (12/26/2015 1:59:51 PM)
Aplikacija ukljucena        (12/26/2015 2:00:16 PM)
Aplikacija iskljucena        (12/26/2015 2:00:37 PM)
Aplikacija ukljucena        (12/26/2015 2:01:33 PM)
Aplikacija iskljucena        (12/26/2015 2:02:02 PM)
Aplikacija ukljucena        (12/26/2015 2:02:22 PM)
Aplikacija iskljucena        (12/26/2015 2:03:23 PM)
Aplikacija ukljucena        (12/26/2015 2:04:42 PM)
Aplikacija iskljucena        (12/26/2015 2:05:08 PM)
Aplikacija ukljucena        (12/26/2015 2:05:54 PM)
Aplikacija iskljucena        (12/26/2015 2:06:09 PM)
Aplikacija ukljucena        (12/26/2015 2:07:51 PM)
Aplikacija iskljucena        (12/26/2015 2:08:49 PM)
Aplikacija ukljucena        (12/26/2015 2:13:48 PM)
Aplikacija iskljucena        (12/26/2015 2:15:33 PM)
Aplikacija ukljucena        (12/26/2015 2:16:09 PM)
Aplikacija iskljucena        (12/26/2015 2:17:09 PM)
Aplikacija ukljucena        (12/26/2015 2:18:45 PM)
Aplikacija iskljucena        (12/26/2015 2:19:02 PM)
Aplikacija ukljucena        (12/26/2015 2:20:10 PM)
Aplikacija iskljucena        (12/26/2015 2:20:34 PM)
Aplikacija ukljucena        (12/26/2015 2:23:49 PM)
Aplikacija iskljucena        (12/26/2015 2:26:45 PM)
Aplikacija ukljucena        (12/26/2015 2:29:48 PM)
Aplikacija iskljucena        (12/26/2015 2:30:07 PM)
Aplikacija ukljucena        (12/26/2015 2:30:40 PM)
Aplikacija iskljucena        (12/26/2015 2:30:55 PM)
Aplikacija ukljucena        (12/26/2015 2:34:10 PM)
Aplikacija iskljucena        (12/26/2015 2:34:30 PM)
Aplikacija ukljucena        (12/26/2015 2:34:47 PM)
Aplikacija iskljucena        (12/26/2015 2:34:58 PM)
Aplikacija ukljucena        (12/26/2015 2:35:19 PM)
Aplikacija iskljucena        (12/26/2015 2:35:31 PM)
Aplikacija ukljucena        (12/26/2015 2:38:53 PM)
Aplikacija iskljucena        (12/26/2015 2:39:08 PM)
Aplikacija ukljucena        (12/26/2015 2:40:20 PM)
Aplikacija iskljucena        (12/26/2015 2:41:01 PM)
Aplikacija ukljucena        (12/26/2015 2:42:52 PM)
Aplikacija iskljucena        (12/26/2015 2:43:14 PM)
Aplikacija ukljucena        (12/26/2015 2:43:27 PM)
Aplikacija iskljucena        (12/26/2015 2:43:36 PM)
Aplikacija ukljucena        (12/26/2015 2:43:46 PM)
Aplikacija iskljucena        (12/26/2015 2:43:58 PM)
Aplikacija ukljucena        (12/26/2015 2:44:08 PM)
Aplikacija iskljucena        (12/26/2015 2:44:17 PM)
Aplikacija ukljucena        (12/26/2015 2:44:26 PM)
Aplikacija iskljucena        (12/26/2015 2:44:41 PM)
Aplikacija ukljucena        (12/26/2015 2:45:40 PM)
Aplikacija iskljucena        (12/26/2015 2:45:53 PM)
Aplikacija ukljucena        (12/26/2015 2:47:39 PM)
Aplikacija iskljucena        (12/26/2015 2:48:14 PM)
Aplikacija ukljucena        (12/26/2015 2:48:49 PM)
Aplikacija iskljucena        (12/26/2015 2:51:14 PM)
Aplikacija ukljucena        (12/26/2015 2:52:19 PM)
Aplikacija ukljucena        (12/26/2015 2:55:33 PM)
Aplikacija iskljucena        (12/26/2015 2:56:43 PM)
Aplikacija ukljucena        (12/26/2015 2:58:20 PM)
Aplikacija iskljucena        (12/26/2015 2:58:35 PM)
Aplikacija ukljucena        (12/26/2015 2:58:45 PM)
Aplikacija iskljucena        (12/26/2015 2:58:59 PM)
Aplikacija ukljucena        (12/26/2015 2:59:10 PM)
Aplikacija iskljucena        (12/26/2015 2:59:22 PM)
Aplikacija ukljucena        (12/26/2015 2:59:31 PM)
Aplikacija iskljucena        (12/26/2015 2:59:43 PM)
Aplikacija ukljucena        (12/26/2015 2:59:52 PM)
Aplikacija iskljucena        (12/26/2015 3:00:13 PM)
Aplikacija ukljucena        (12/26/2015 3:01:35 PM)
Aplikacija iskljucena        (12/26/2015 3:01:44 PM)
Aplikacija ukljucena        (12/26/2015 3:04:08 PM)
Aplikacija iskljucena        (12/26/2015 3:04:23 PM)
Aplikacija ukljucena        (12/26/2015 3:05:07 PM)
Aplikacija ukljucena        (12/26/2015 3:07:13 PM)
Aplikacija iskljucena        (12/26/2015 3:08:59 PM)
Aplikacija ukljucena        (12/27/2015 8:34:37 PM)
Aplikacija iskljucena        (12/27/2015 8:36:59 PM)
Aplikacija ukljucena        (12/28/2015 4:56:57 PM)
Aplikacija iskljucena        (12/28/2015 4:57:19 PM)
Aplikacija ukljucena        (12/28/2015 4:57:35 PM)
Aplikacija iskljucena        (12/28/2015 4:58:01 PM)
Aplikacija ukljucena        (12/28/2015 5:00:44 PM)
Aplikacija iskljucena        (12/28/2015 5:01:20 PM)
Aplikacija ukljucena        (12/28/2015 5:01:31 PM)
Aplikacija ukljucena        (12/28/2015 5:01:53 PM)
Aplikacija ukljucena        (12/28/2015 5:02:36 PM)
Aplikacija ukljucena        (12/28/2015 5:04:15 PM)
Aplikacija ukljucena        (12/28/2015 5:06:13 PM)
Aplikacija ukljucena        (12/28/2015 5:07:33 PM)
Aplikacija ukljucena        (12/28/2015 5:09:09 PM)
Aplikacija iskljucena        (12/28/2015 5:09:12 PM)
Aplikacija ukljucena        (12/28/2015 5:10:47 PM)
Aplikacija ukljucena        (12/28/2015 5:14:05 PM)
Aplikacija ukljucena        (12/28/2015 5:14:32 PM)
Aplikacija ukljucena        (12/28/2015 5:16:57 PM)
Aplikacija ukljucena        (12/28/2015 5:18:21 PM)
Aplikacija ukljucena        (12/28/2015 5:19:27 PM)
Aplikacija ukljucena        (12/28/2015 5:22:01 PM)
Aplikacija iskljucena        (12/28/2015 5:22:25 PM)
Aplikacija ukljucena        (12/28/2015 5:23:14 PM)
Aplikacija iskljucena        (12/28/2015 5:23:29 PM)
Aplikacija ukljucena        (12/28/2015 5:24:07 PM)
Aplikacija iskljucena        (12/28/2015 5:24:24 PM)
Aplikacija ukljucena        (12/28/2015 5:24:38 PM)
Aplikacija iskljucena        (12/28/2015 5:25:06 PM)
Aplikacija ukljucena        (12/28/2015 5:28:38 PM)
Aplikacija ukljucena        (12/28/2015 5:29:34 PM)
Aplikacija ukljucena        (12/28/2015 5:32:11 PM)
Aplikacija iskljucena        (12/28/2015 5:32:55 PM)
Aplikacija ukljucena        (12/28/2015 5:33:20 PM)
Aplikacija iskljucena        (12/28/2015 5:33:45 PM)
Aplikacija ukljucena        (12/28/2015 5:34:10 PM)
Aplikacija iskljucena        (12/28/2015 5:34:26 PM)
Aplikacija ukljucena        (12/28/2015 5:34:33 PM)
Aplikacija iskljucena        (12/28/2015 5:34:42 PM)
Aplikacija ukljucena        (12/28/2015 5:35:36 PM)
Aplikacija ukljucena        (12/28/2015 5:36:02 PM)
Aplikacija ukljucena        (12/28/2015 5:36:52 PM)
Aplikacija ukljucena        (12/28/2015 5:37:32 PM)
Aplikacija ukljucena        (12/28/2015 5:39:42 PM)
Aplikacija ukljucena        (12/28/2015 5:40:32 PM)
Aplikacija ukljucena        (12/28/2015 5:41:13 PM)
Aplikacija ukljucena        (12/28/2015 5:41:46 PM)
Aplikacija ukljucena        (12/28/2015 5:42:34 PM)
Aplikacija ukljucena        (12/28/2015 5:43:52 PM)
Aplikacija ukljucena        (12/28/2015 5:44:23 PM)
Aplikacija ukljucena        (12/28/2015 5:46:19 PM)
Aplikacija ukljucena        (12/28/2015 5:49:29 PM)
Aplikacija ukljucena        (12/28/2015 5:50:43 PM)
Aplikacija ukljucena        (12/28/2015 5:51:17 PM)
Aplikacija ukljucena        (12/28/2015 5:51:54 PM)
Aplikacija ukljucena        (12/28/2015 5:52:40 PM)
Aplikacija ukljucena        (12/28/2015 5:53:40 PM)
Aplikacija ukljucena        (12/28/2015 5:54:21 PM)
Aplikacija ukljucena        (12/28/2015 5:55:03 PM)
Aplikacija iskljucena        (12/28/2015 5:55:49 PM)
Aplikacija ukljucena        (12/28/2015 5:58:16 PM)
Aplikacija iskljucena        (12/28/2015 5:58:47 PM)
Aplikacija ukljucena        (12/28/2015 5:58:54 PM)
Aplikacija iskljucena        (12/28/2015 5:59:05 PM)
Aplikacija ukljucena        (12/28/2015 6:00:17 PM)
Aplikacija iskljucena        (12/28/2015 6:00:27 PM)
Aplikacija ukljucena        (12/28/2015 6:01:09 PM)
Aplikacija iskljucena        (12/28/2015 6:01:25 PM)
Aplikacija ukljucena        (12/28/2015 6:01:36 PM)
Aplikacija iskljucena        (12/28/2015 6:01:49 PM)
Aplikacija ukljucena        (12/28/2015 6:02:11 PM)
Aplikacija iskljucena        (12/28/2015 6:02:24 PM)
Aplikacija ukljucena        (12/28/2015 6:03:00 PM)
Aplikacija iskljucena        (12/28/2015 6:03:11 PM)
Aplikacija ukljucena        (12/28/2015 6:03:15 PM)
Aplikacija ukljucena        (12/28/2015 6:04:10 PM)
Aplikacija iskljucena        (12/28/2015 6:07:56 PM)
Aplikacija ukljucena        (12/28/2015 6:11:51 PM)
Aplikacija iskljucena        (12/28/2015 6:12:08 PM)
Aplikacija ukljucena        (12/28/2015 6:12:55 PM)
Aplikacija iskljucena        (12/28/2015 6:15:34 PM)
Aplikacija ukljucena        (12/28/2015 6:46:20 PM)
Aplikacija iskljucena        (12/28/2015 6:46:34 PM)
Aplikacija ukljucena        (12/28/2015 6:46:37 PM)
Aplikacija ukljucena        (12/28/2015 6:47:29 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/28/2015 6:47:30 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/28/2015 6:47:33 PM)
Aplikacija iskljucena        (12/28/2015 6:48:55 PM)
Aplikacija ukljucena        (12/28/2015 6:52:00 PM)
Aplikacija iskljucena        (12/28/2015 6:53:29 PM)
Aplikacija ukljucena        (12/28/2015 6:54:11 PM)
Aplikacija iskljucena        (12/28/2015 6:54:20 PM)
Aplikacija ukljucena        (12/28/2015 6:55:35 PM)
Aplikacija iskljucena        (12/28/2015 6:55:48 PM)
Aplikacija ukljucena        (12/28/2015 7:11:50 PM)
Aplikacija iskljucena        (12/28/2015 7:12:16 PM)
Aplikacija ukljucena        (12/28/2015 7:12:29 PM)
Aplikacija iskljucena        (12/28/2015 7:12:35 PM)
Aplikacija ukljucena        (12/28/2015 7:14:55 PM)
Aplikacija iskljucena        (12/28/2015 7:15:39 PM)
Aplikacija ukljucena        (12/29/2015 11:43:22 AM)
Aplikacija iskljucena        (12/29/2015 11:43:44 AM)
Aplikacija ukljucena        (12/29/2015 1:56:50 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:06:05 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:06:05 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:06:05 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:06:30 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:06:47 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:06:47 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:06:53 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:07:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:07:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:18:06 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:18:33 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:18:36 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:18:37 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:18:44 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:20:10 PM)
Aplikacija iskljucena        (12/29/2015 2:28:34 PM)
Aplikacija ukljucena        (12/29/2015 2:51:03 PM)
Aplikacija iskljucena        (12/29/2015 2:51:15 PM)
Aplikacija ukljucena        (12/29/2015 2:52:41 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:54:50 PM)
Aplikacija ukljucena        (12/29/2015 2:55:30 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:56:26 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:56:27 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:56:27 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:56:27 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:56:27 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:56:41 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 2:56:41 PM)
Aplikacija ukljucena        (12/29/2015 3:09:49 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 3:13:35 PM)
Aplikacija iskljucena        (12/29/2015 3:14:38 PM)
Aplikacija ukljucena        (12/29/2015 3:15:11 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 3:16:30 PM)
Aplikacija iskljucena        (12/29/2015 3:17:33 PM)
Aplikacija ukljucena        (12/29/2015 3:18:01 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 3:24:53 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 3:24:53 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 3:24:53 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 3:24:54 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 3:25:15 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 3:25:15 PM)
Aplikacija iskljucena        (12/29/2015 3:26:53 PM)
Aplikacija ukljucena        (12/29/2015 7:21:51 PM)
Aplikacija ukljucena        (12/29/2015 7:25:17 PM)
Aplikacija ukljucena        (12/29/2015 7:25:40 PM)
Aplikacija ukljucena        (12/29/2015 7:26:05 PM)
Aplikacija ukljucena        (12/29/2015 7:27:04 PM)
Aplikacija ukljucena        (12/29/2015 7:28:11 PM)
Aplikacija iskljucena        (12/29/2015 7:28:29 PM)
Aplikacija ukljucena        (12/29/2015 7:29:00 PM)
Aplikacija ukljucena        (12/29/2015 7:29:43 PM)
Aplikacija ukljucena        (12/29/2015 7:30:17 PM)
Aplikacija ukljucena        (12/29/2015 7:30:55 PM)
Aplikacija ukljucena        (12/29/2015 7:31:39 PM)
Aplikacija iskljucena        (12/29/2015 7:32:00 PM)
Aplikacija ukljucena        (12/29/2015 7:32:10 PM)
Aplikacija iskljucena        (12/29/2015 7:32:56 PM)
Aplikacija ukljucena        (12/29/2015 7:33:50 PM)
Aplikacija ukljucena        (12/29/2015 7:34:13 PM)
Aplikacija iskljucena        (12/29/2015 7:34:31 PM)
Aplikacija ukljucena        (12/29/2015 7:36:16 PM)
Aplikacija iskljucena        (12/29/2015 7:36:29 PM)
Aplikacija ukljucena        (12/29/2015 7:36:34 PM)
Aplikacija ukljucena        (12/29/2015 7:37:07 PM)
Aplikacija iskljucena        (12/29/2015 7:37:22 PM)
Aplikacija ukljucena        (12/29/2015 7:39:33 PM)
Aplikacija ukljucena        (12/29/2015 7:40:47 PM)
Aplikacija iskljucena        (12/29/2015 7:43:07 PM)
Aplikacija ukljucena        (12/29/2015 7:44:02 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 7:47:22 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 7:50:00 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 7:50:00 PM)
Aplikacija ukljucena        (12/29/2015 7:51:56 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 7:51:57 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 7:51:57 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 7:52:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 7:52:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 7:52:15 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 7:52:15 PM)
Aplikacija iskljucena        (12/29/2015 7:55:09 PM)
Aplikacija ukljucena        (12/29/2015 8:02:06 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:02:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:02:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:02:15 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:02:16 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:03:48 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:03:48 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:03:48 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:03:48 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:03:48 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:04:06 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:04:07 PM)
Aplikacija ukljucena        (12/29/2015 8:05:47 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:06:11 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:06:56 PM)
Aplikacija ukljucena        (12/29/2015 8:07:43 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:08:45 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:08:46 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:08:47 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:08:48 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:08:48 PM)
Aplikacija ukljucena        (12/29/2015 8:10:28 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:10:29 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:10:29 PM)
Aplikacija ukljucena        (12/29/2015 8:11:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:11:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:11:09 PM)
Aplikacija ukljucena        (12/29/2015 8:11:31 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:11:32 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:11:33 PM)
Aplikacija ukljucena        (12/29/2015 8:12:31 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:12:32 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:12:32 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:12:39 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:12:40 PM)
Aplikacija ukljucena        (12/29/2015 8:16:27 PM)
Aplikacija ukljucena        (12/29/2015 8:17:33 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (12/29/2015 8:18:00 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 8:18:58 PM)
Aplikacija iskljucena        (12/29/2015 8:19:14 PM)
Aplikacija ukljucena        (12/29/2015 9:01:27 PM)
Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index  {drawFittingGraphic()}        (12/29/2015 9:01:49 PM)
Aplikacija ukljucena        (12/29/2015 9:02:25 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:02:27 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:02:27 PM)
Aplikacija ukljucena        (12/29/2015 9:02:49 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:02:50 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:02:51 PM)
Aplikacija iskljucena        (12/29/2015 9:03:35 PM)
Aplikacija ukljucena        (12/29/2015 9:03:48 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:03:49 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:03:49 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:05:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:05:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:05:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:05:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:05:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:06:09 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:06:10 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:07:10 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:07:47 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:09:52 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:11:09 PM)
Aplikacija iskljucena        (12/29/2015 9:11:43 PM)
Aplikacija ukljucena        (12/29/2015 9:12:14 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:12:15 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:12:16 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:12:22 PM)
Aplikacija ukljucena        (12/29/2015 9:14:20 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:14:22 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:14:22 PM)
Aplikacija ukljucena        (12/29/2015 9:16:44 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:16:45 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:16:45 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:18:01 PM)
Aplikacija ukljucena        (12/29/2015 9:19:33 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:19:34 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:19:34 PM)
Aplikacija iskljucena        (12/29/2015 9:19:40 PM)
Aplikacija ukljucena        (12/29/2015 9:19:42 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:19:43 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:19:44 PM)
Aplikacija iskljucena        (12/29/2015 9:20:28 PM)
Aplikacija ukljucena        (12/29/2015 9:21:15 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:21:16 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:21:17 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:21:38 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:21:41 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:22:25 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:22:25 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:22:32 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:23:00 PM)
Aplikacija iskljucena        (12/29/2015 9:23:08 PM)
Aplikacija ukljucena        (12/29/2015 9:24:32 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:24:33 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:24:34 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:24:46 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:25:03 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:25:09 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:25:19 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:25:50 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:25:50 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:25:59 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:25:59 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:26:13 PM)
Aplikacija iskljucena        (12/29/2015 9:26:45 PM)
Aplikacija ukljucena        (12/29/2015 9:27:24 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:27:25 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:27:26 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:27:32 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:27:32 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:27:46 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:28:01 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:28:13 PM)
Aplikacija iskljucena        (12/29/2015 9:28:19 PM)
Aplikacija ukljucena        (12/29/2015 9:33:25 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:33:26 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:33:26 PM)
Aplikacija iskljucena        (12/29/2015 9:33:33 PM)
Aplikacija ukljucena        (12/29/2015 9:33:53 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:33:54 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:33:55 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:01 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:01 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:02 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:04 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:04 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:04 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:05 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:06 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:06 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:07 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:08 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:09 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:09 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:10 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:11 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:12 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:12 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:13 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:14 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:15 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:16 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:16 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:17 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:18 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:20 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:20 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:21 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:22 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:24 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:25 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:26 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:29 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:30 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:32 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:33 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:34 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:34 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:36 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:40 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:41 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:43 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:34:44 PM)
Aplikacija iskljucena        (12/29/2015 9:35:29 PM)
Aplikacija ukljucena        (12/29/2015 9:36:33 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:36:34 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:36:34 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:36:41 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:36:41 PM)
[private void setRp02PointCalculated(int indexOfRp02, double x, double y) ]{if (indexOfRp02 == dataReader.FittingPreassureInMPa.Count)}        (12/29/2015 9:36:41 PM)
Aplikacija iskljucena        (12/29/2015 9:36:43 PM)
